from exploits.tree import red_black_tree
from test.exploits.dummy_output import DummyOutput
from input.ints import IntGenerator


def test_min():
    output = DummyOutput()
    n_inputs = 10
    red_black_tree.options['n_inputs'] = n_inputs
    red_black_tree.run(IntGenerator(), output)
    assert len(output) == n_inputs
    for i in range(len(output) - 1):
        assert output[i] == output[i + 1] + 1


def test_min_more_inputs():
    output = DummyOutput()
    n_inputs = 100
    red_black_tree.options['n_inputs'] = n_inputs
    red_black_tree.run(IntGenerator(), output)
    assert len(output) == n_inputs
    for i in range(len(output) - 1):
        assert output[i] == output[i + 1] + 1
