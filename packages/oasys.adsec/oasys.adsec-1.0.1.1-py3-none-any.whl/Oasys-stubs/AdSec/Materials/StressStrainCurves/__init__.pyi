#------------------------------------------------------------------------------
# <auto-generated>
#     This file was auto generated.
#
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
#------------------------------------------------------------------------------
import typing
from abc import abstractmethod, ABCMeta
from Oasys.AdSec.Materials import IMaterial
from Oasys.Collections import IList
from Oasys.Units import Strain
from UnitsNet import Pressure


# noinspection PyPep8Naming
class ITensionCompressionCurve(metaclass=ABCMeta):
    """A stress-strain relationship for a "IMaterial".
    
    See "~/articles/glossary.md#tension-compression-curvetension-compression-curve""Glossary/see
    """

    @property
    def Compression(self) -> IStressStrainCurve:
        """The compression stress-strain curve.
        """
        pass

    @property
    def Tension(self) -> IStressStrainCurve:
        """The tension stress-strain curve.
        """
        pass

    @staticmethod
    def Create(tension: IStressStrainCurve, compression: IStressStrainCurve) -> ITensionCompressionCurve:
        """Creates a new "ITensionCompressionCurve" from
        "Property Tension" and "Property Compression" stress-strain curves.

        :param tension: The tension stress-strain curve.
        :type tension: IStressStrainCurve
        :param compression: The compression stress-strain curve.
        :type compression: IStressStrainCurve
        :return: 
Stress-strain relationship with the specified tension and compression curves.
        :rtype: ITensionCompressionCurve
        """
        pass

    @abstractmethod
    def StressAt(self, strain: Strain) -> Pressure:
        """The stress at a given strain.

        :param strain: The strain at which stress is to be calculated.
        :type strain: Strain
        :return:  Compressive stress for a negative strain
and tensile stress for a positive strain.
        :rtype: Pressure
        """
        pass


# noinspection PyPep8Naming
class IStressStrainCurve(metaclass=ABCMeta):
    """A stress-strain curve.
    It can be used to define the tension or the compression
    part of an "None !:ITensionCompressionCurve".
    
    See "~/articles/glossary.md#stress-strain-curvestress-strain-curve""Glossary/see
    """

    @property
    def FailureStrain(self) -> Strain:
        """The strain at which the material fails.
        """
        pass

    @abstractmethod
    def StressAt(self, strain: Strain) -> Pressure:
        """The stress at a given strain.

        :param strain: The strain at which stress is to be calculated.
        :type strain: Strain
        :return: Stress at given strain.
        :rtype: Pressure
        """
        pass


# noinspection PyPep8Naming
class IBilinearStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" in which the stress is
    directly proportional to the strain until the yield point. The
    curve has a constant gradient between the yield and the failure points.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,60" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><text x="490" y="40" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="60" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def FailurePoint(self) -> IStressStrainPoint:
        """The point at which the material fails.
        """
        pass

    @property
    def YieldPoint(self) -> IStressStrainPoint:
        """The point up to which the stress-strain relationship is elastic.
        """
        pass

    @staticmethod
    @typing.overload
    def Create(yieldPoint: IStressStrainPoint, failurePoint: IStressStrainPoint) -> IBilinearStressStrainCurve:
        """Creates a new "IBilinearStressStrainCurve"
        with a constant gradient between the yield and the failure points.

        :param yieldPoint: 
The point up to which the stress-strain relationship is elastic, and
beyond which the curve has a constant gradient.
        :type yieldPoint: IStressStrainPoint
        :param failurePoint: The point at which the material fails.
        :type failurePoint: IStressStrainPoint
        """
        pass

    @staticmethod
    @typing.overload
    def Create(yieldPoint: IStressStrainPoint, failureStrain: Strain) -> IBilinearStressStrainCurve:
        """Creates a new "IBilinearStressStrainCurve"
        with a zero gradient between the yield and the failure points.

        :param yieldPoint: 
The point up to which the stress-strain relationship is elastic, and
beyond which there is no change in stress with change in strain.
        :type yieldPoint: IStressStrainPoint
        :param failureStrain: The strain at which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class IStressStrainPoint(metaclass=ABCMeta):
    """A stress-strain point.
    It can be used as an input type to define a "IStressStrainCurve".
    """

    @property
    def Strain(self) -> Strain: ...

    @property
    def Stress(self) -> Pressure: ...

    @staticmethod
    def Create(stress: Pressure, strain: Strain) -> IStressStrainPoint:
        """Creates a new "IStressStrainPoint".
        """
        pass


# noinspection PyPep8Naming
class IExplicitStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" defined by a list of
    "IStressStrainPoint"s.
    
    See "~/articles/glossary.md#explicit-stress-strain-curveexplicit-stress-strain-curve""Glossary/seecentersvg width="500" height="300"line x1="20" y1="300" x2="20" y2="20" /text x="-160" y="15" class="text" transform="rotate(270)"Stress/textline x1="0" y1="280" x2="480" y2="280" /text x="200" y="300" class="text"Strain/textpolyline points="20,280 70,150 170,100 320,100" class="curve" /line x1="320" y1="100" x2="400" y2="60" stroke-dasharray="4" class="curve" /text x="40" y="260" class="text"(x1, y1)/texttext x="45" y="125" class="text"(x2, y2)/texttext x="150" y="75" class="text"(x3, y3)/texttext x="300" y="75" class="text"(x4, y4)/texttext x="380" y="35" class="text"(x, y)/textcircle cX="20" cy="280" r="15" /circle cX="70" cy="150" r="15" /circle cX="170" cy="100" r="15" /circle cX="320" cy="100" r="15" /circle cX="400" cy="60" r="15" /style
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def Points(self) -> IList[IStressStrainPoint]:
        """The stress-strain points.
        """
        pass

    @Points.setter
    def Points(self, value: IList[IStressStrainPoint]) -> None: ...

    @staticmethod
    def Create() -> IExplicitStressStrainCurve:
        """Creates a new "IExplicitStressStrainCurve".

        :return: Explicit curve with empty list of stress-strain points ().
        :rtype: IExplicitStressStrainCurve
        """
        pass


# noinspection PyPep8Naming
class IFibModelCodeStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """Schematic "IStressStrainCurve" from FIB model code.
    Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
    for further details.
    <center><svg width="500" height="300" transform="scaleX(1.33)"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 50,238 80,201 106,167 133,139 160,115 186,96 213,80 239,69 266,63 293,61 319,63 346,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="293" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="114" y2="131" stroke-dasharray="4" /><text x="-110" y="190" class="text" transform="rotate(302)" text-anchor="end">Initial modulus</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def PeakPoint(self) -> IStressStrainPoint:
        """The point of maximum stress.
        """
        pass

    @property
    def InitialModulus(self) -> Pressure:
        """The initial gradient of the stress-strain curve.
        """
        pass

    @staticmethod
    def Create(initialModulus: Pressure, peakPoint: IStressStrainPoint, failureStrain: Strain) -> IFibModelCodeStressStrainCurve:
        """Creates a new "IFibModelCodeStressStrainCurve" stress-strain curve
        (schematic stress-strain curve from FIB model code).

        :param initialModulus: The initial gradient of the stress-strain curve.
        :type initialModulus: Pressure
        :param peakPoint: The point of maximum stress.
        :type peakPoint: IStressStrainPoint
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class ILinearStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" in which the stress
    is directly proportional to the strain. The material provides no strength
    beyond the failure point.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 400,100" class="curve" /><text x="380" y="80" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="100" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def FailurePoint(self) -> IStressStrainPoint:
        """The point at which the material fails.
        """
        pass

    @staticmethod
    def Create(failurePoint: IStressStrainPoint) -> ILinearStressStrainCurve:
        """Creates a new "ILinearStressStrainCurve".

        :param failurePoint: The point at which the material fails.
        :type failurePoint: IStressStrainPoint
        """
        pass


# noinspection PyPep8Naming
class IManderConfinedStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" for a confined concrete "None !:IMaterial".
    Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
    Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
    Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40,229 60,184 80,146 100,115 120,91 130,82 140,74 150,68 155,66 160,64 170,61 180,60.5 200,61 220,62 240,64 400,78" class="curve" /><line x1="20" y1="60" x2="180" y2="60" stroke-dasharray="4" /><text x="35" y="40" class="text">Confined strength</text><circle cX="20" cy="60" r="15" /><line x1="400" y1="78" x2="400" y2="280" stroke-dasharray="4" /><text x="495" y="265" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="66" y2="131" stroke-dasharray="4" /><text x="-150" y="135" class="text" transform="rotate(289)" text-anchor="end">Initial modulus</text><line x1="180" y1="60" x2="180" y2="280" stroke-dasharray="4" /><text x="265" y="265" class="text" text-anchor="end">Peak strain</text><circle cX="180" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def InitialModulus(self) -> Pressure:
        """The initial gradient of the stress-strain curve.
        """
        pass

    @property
    def ConfinedStrength(self) -> Pressure:
        """The confined strength of the material.
        """
        pass

    @property
    def UnconfinedStrength(self) -> Pressure:
        """The unconfined strength of the material.
        """
        pass

    @staticmethod
    def Create(unconfinedStrength: Pressure, confinedStrength: Pressure, initialModulus: Pressure, failureStrain: Strain) -> IManderConfinedStressStrainCurve:
        """Creates a new "IManderConfinedStressStrainCurve".

        :param unconfinedStrength: The unconfined strength of the material.
        :type unconfinedStrength: Pressure
        :param confinedStrength: The confined strength of the material.
        :type confinedStrength: Pressure
        :param initialModulus: The initial gradient of the stress-strain curve.
        :type initialModulus: Pressure
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class IManderStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" for an unconfined concrete "None !:IMaterial".
    Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
    Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
    Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40.9,221 49,200 60.5,172 75.5,140 79.5,132 90,115 100,101 108,90 120,78 130,70 140,65 145,63.5 150,62.5 155,62 160,61.5 170,62 185,65 200,69.5 220,78 240,88.5 260,101.5 300,132" class="curve" /><polyline points="300,132 400,280" class="curve" stroke-dasharray="4" /><text x="170" y="40" class="text">Peak point</text><circle cX="160" cy="61.5" r="15" /><text x="490" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="60" y2="131" stroke-dasharray="4" /><text x="-150" y="125" class="text" transform="rotate(287)" text-anchor="end">Initial modulus</text><text x="394" y="125" class="text" text-anchor="end">2 x Peak strain</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def PeakPoint(self) -> IStressStrainPoint:
        """The point of maximum stress.
        """
        pass

    @property
    def InitialModulus(self) -> Pressure:
        """The initial gradient of the stress-strain curve.
        """
        pass

    @staticmethod
    def Create(initialModulus: Pressure, peakPoint: IStressStrainPoint, failureStrain: Strain) -> IManderStressStrainCurve:
        """Creates a new "IManderStressStrainCurve" stress-strain curve.

        :param initialModulus: The initial gradient of the stress-strain curve.
        :type initialModulus: Pressure
        :param peakPoint: The point of maximum stress.
        :type peakPoint: IStressStrainPoint
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class IParabolaRectangleStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" which is initially parabolic.
    The stress is constant beyond the yield point. The material provides no strength beyond
    the failure point.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 30,261 40,242 50,225 60,209 70,194 80,180 90,167 100,156 110,145 120,136 130,127 140,120 150,114 160,109 170,105 180,102 190,101 200,100 400,100" class="curve" /><text x="210" y="80" class="text">Yield point</text><circle cX="200" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def YieldPoint(self) -> IStressStrainPoint:
        """The point up to which the stress-strain relationship is parabolic,
        and beyond which there is no change in stress with change in strain.
        """
        pass

    @staticmethod
    def Create(yieldPoint: IStressStrainPoint, failureStrain: Strain) -> IParabolaRectangleStressStrainCurve:
        """Creates a new "IParabolaRectangleStressStrainCurve".

        :param yieldPoint: 
The point up to which the stress-strain relationship is parabolic, and beyond which
there is no change in stress with change in strain.
        :type yieldPoint: IStressStrainPoint
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class IParkStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" with a linear stress-strain
    relationship up to the yield point. The gradient of the curve is zero
    up to some point beyond the yield, and then the curve rises to reach the peak
    point. The point up to which the gradient of the curve is zero is calculated
    as:
    
    
    stress = yield stress,<br />
    strain = yield strain * factor,<br />
    factor = 1, for yield stress &gt; 120ksi,<br />
    = [-4 * (yield stress in ksi - 60) / 60 + 5], for yield stress between 60ksi and 120ksi,<br />
    = [-9 * (yield stress in ksi - 40) / 20 + 14], for yield stress between 40ksi and 60ksi,<br />
    = 14, for yield stress less than 40ksi.
    </para>
    Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
    for further details.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 60,130 100,130 120,120 140,111 160,104 180,98 200,93 230,87 280,81 320,79 380,78 400,78" class="curve" /><text x="125" y="100" class="text" text-anchor="end">Yield point</text><circle cX="60" cy="130" r="15" /><text x="385" y="58" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="78" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def YieldPoint(self) -> IStressStrainPoint:
        """The point up to which the stress-strain relationship is elastic.
        """
        pass

    @staticmethod
    def Create(yieldPoint: IStressStrainPoint) -> IParkStressStrainCurve:
        """Creates a new "IParkStressStrainCurve".

        :param yieldPoint: The point up to which the stress-strain relationship is elastic.
        :type yieldPoint: IStressStrainPoint
        """
        pass


# noinspection PyPep8Naming
class IPopovicsStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" based on the work of Popovics.
    It is defined by a series of curves adjusted on the basis of Thorenfeldt base curve.
    Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
    for further details.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 53,238 80,201 107,167 133,139 160,115 186,96 212,80 240,69 266,63 292,61 320,63 345,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="292" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="390" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def PeakPoint(self) -> IStressStrainPoint:
        """The point of maximum stress.
        """
        pass

    @staticmethod
    def Create(peakPoint: IStressStrainPoint, failureStrain: Strain) -> IPopovicsStressStrainCurve:
        """Creates a new "IPopovicsStressStrainCurve".

        :param peakPoint: The point of maximum stress.
        :type peakPoint: IStressStrainPoint
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass


# noinspection PyPep8Naming
class IRectangularStressStrainCurve(IStressStrainCurve, metaclass=ABCMeta):
    """A type of "IStressStrainCurve" in which the stress
    is zero until the yield point. The stress is constant betweeen the yield
    point and the failure point.
    <center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
    </style></svg></center>
    """

    @property
    def YieldPoint(self) -> IStressStrainPoint:
        """The material does not have strength until the
        yield point. The stress is constant beyond this point.
        """
        pass

    @staticmethod
    def Create(yieldPoint: IStressStrainPoint, failureStrain: Strain) -> IRectangularStressStrainCurve:
        """Creates a new "IRectangularStressStrainCurve".

        :param yieldPoint: 
The material does not have strength until the yield point.
The stress is constant beyond this point.
        :type yieldPoint: IStressStrainPoint
        :param failureStrain: The strain beyond which the material fails.
        :type failureStrain: Strain
        """
        pass
