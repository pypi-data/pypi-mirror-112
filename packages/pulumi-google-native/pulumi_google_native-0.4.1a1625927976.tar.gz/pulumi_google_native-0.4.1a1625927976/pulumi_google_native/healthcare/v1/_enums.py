# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AttributeDefinitionCategory',
    'AuditLogConfigLogType',
    'ConsentState',
    'FhirStoreVersion',
    'GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition',
    'SchemaConfigSchemaType',
    'SchemaPackageSchematizedParsingType',
    'TypePrimitive',
]


class AttributeDefinitionCategory(str, Enum):
    """
    Required. The category of the attribute. The value of this field cannot be changed after creation.
    """
    CATEGORY_UNSPECIFIED = "CATEGORY_UNSPECIFIED"
    RESOURCE = "RESOURCE"
    REQUEST = "REQUEST"


class AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    ADMIN_READ = "ADMIN_READ"
    DATA_WRITE = "DATA_WRITE"
    DATA_READ = "DATA_READ"


class ConsentState(str, Enum):
    """
    Required. Indicates the current state of this Consent.
    """
    STATE_UNSPECIFIED = "STATE_UNSPECIFIED"
    ACTIVE = "ACTIVE"
    ARCHIVED = "ARCHIVED"
    REVOKED = "REVOKED"
    DRAFT = "DRAFT"
    REJECTED = "REJECTED"


class FhirStoreVersion(str, Enum):
    """
    Immutable. The FHIR specification version that this FHIR store supports natively. This field is immutable after store creation. Requests are rejected if they contain FHIR resources of a different version. Version is required for every FHIR store.
    """
    VERSION_UNSPECIFIED = "VERSION_UNSPECIFIED"
    DSTU2 = "DSTU2"
    STU3 = "STU3"
    R4 = "R4"


class GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition(str, Enum):
    """
    Determines if existing data in the destination dataset is overwritten, appended to, or not written if the tables contain data. If a write_disposition is specified, the `force` parameter is ignored.
    """
    WRITE_DISPOSITION_UNSPECIFIED = "WRITE_DISPOSITION_UNSPECIFIED"
    WRITE_EMPTY = "WRITE_EMPTY"
    WRITE_TRUNCATE = "WRITE_TRUNCATE"
    WRITE_APPEND = "WRITE_APPEND"


class SchemaConfigSchemaType(str, Enum):
    """
    Specifies the output schema type. Schema type is required.
    """
    SCHEMA_TYPE_UNSPECIFIED = "SCHEMA_TYPE_UNSPECIFIED"
    ANALYTICS = "ANALYTICS"


class SchemaPackageSchematizedParsingType(str, Enum):
    """
    Determines how messages that fail to parse are handled.
    """
    SCHEMATIZED_PARSING_TYPE_UNSPECIFIED = "SCHEMATIZED_PARSING_TYPE_UNSPECIFIED"
    SOFT_FAIL = "SOFT_FAIL"
    HARD_FAIL = "HARD_FAIL"


class TypePrimitive(str, Enum):
    """
    If this is a primitive type then this field is the type of the primitive For example, STRING. Leave unspecified for composite types.
    """
    PRIMITIVE_UNSPECIFIED = "PRIMITIVE_UNSPECIFIED"
    STRING = "STRING"
    VARIES = "VARIES"
    UNESCAPED_STRING = "UNESCAPED_STRING"
