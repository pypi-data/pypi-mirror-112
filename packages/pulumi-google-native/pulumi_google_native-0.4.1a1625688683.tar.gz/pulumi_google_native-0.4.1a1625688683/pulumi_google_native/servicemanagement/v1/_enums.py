# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ApiSyntax',
    'AuditLogConfigLogType',
    'BackendRulePathTranslation',
    'EnumSyntax',
    'FieldCardinality',
    'FieldKind',
    'LabelDescriptorValueType',
    'MethodSyntax',
    'MetricDescriptorLaunchStage',
    'MetricDescriptorMetricKind',
    'MetricDescriptorValueType',
    'MonitoredResourceDescriptorLaunchStage',
    'RolloutStatus',
    'TypeSyntax',
]


class ApiSyntax(str, Enum):
    """
    The source syntax of the service.
    """
    SYNTAX_PROTO2 = "SYNTAX_PROTO2"
    SYNTAX_PROTO3 = "SYNTAX_PROTO3"


class AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    ADMIN_READ = "ADMIN_READ"
    DATA_WRITE = "DATA_WRITE"
    DATA_READ = "DATA_READ"


class BackendRulePathTranslation(str, Enum):
    PATH_TRANSLATION_UNSPECIFIED = "PATH_TRANSLATION_UNSPECIFIED"
    CONSTANT_ADDRESS = "CONSTANT_ADDRESS"
    APPEND_PATH_TO_ADDRESS = "APPEND_PATH_TO_ADDRESS"


class EnumSyntax(str, Enum):
    """
    The source syntax.
    """
    SYNTAX_PROTO2 = "SYNTAX_PROTO2"
    SYNTAX_PROTO3 = "SYNTAX_PROTO3"


class FieldCardinality(str, Enum):
    """
    The field cardinality.
    """
    CARDINALITY_UNKNOWN = "CARDINALITY_UNKNOWN"
    CARDINALITY_OPTIONAL = "CARDINALITY_OPTIONAL"
    CARDINALITY_REQUIRED = "CARDINALITY_REQUIRED"
    CARDINALITY_REPEATED = "CARDINALITY_REPEATED"


class FieldKind(str, Enum):
    """
    The field type.
    """
    TYPE_UNKNOWN = "TYPE_UNKNOWN"
    TYPE_DOUBLE = "TYPE_DOUBLE"
    TYPE_FLOAT = "TYPE_FLOAT"
    TYPE_INT64 = "TYPE_INT64"
    TYPE_UINT64 = "TYPE_UINT64"
    TYPE_INT32 = "TYPE_INT32"
    TYPE_FIXED64 = "TYPE_FIXED64"
    TYPE_FIXED32 = "TYPE_FIXED32"
    TYPE_BOOL = "TYPE_BOOL"
    TYPE_STRING = "TYPE_STRING"
    TYPE_GROUP = "TYPE_GROUP"
    TYPE_MESSAGE = "TYPE_MESSAGE"
    TYPE_BYTES = "TYPE_BYTES"
    TYPE_UINT32 = "TYPE_UINT32"
    TYPE_ENUM = "TYPE_ENUM"
    TYPE_SFIXED32 = "TYPE_SFIXED32"
    TYPE_SFIXED64 = "TYPE_SFIXED64"
    TYPE_SINT32 = "TYPE_SINT32"
    TYPE_SINT64 = "TYPE_SINT64"


class LabelDescriptorValueType(str, Enum):
    """
    The type of data that can be assigned to the label.
    """
    STRING = "STRING"
    BOOL = "BOOL"
    INT64 = "INT64"


class MethodSyntax(str, Enum):
    """
    The source syntax of this method.
    """
    SYNTAX_PROTO2 = "SYNTAX_PROTO2"
    SYNTAX_PROTO3 = "SYNTAX_PROTO3"


class MetricDescriptorLaunchStage(str, Enum):
    """
    Optional. The launch stage of the metric definition.
    """
    LAUNCH_STAGE_UNSPECIFIED = "LAUNCH_STAGE_UNSPECIFIED"
    UNIMPLEMENTED = "UNIMPLEMENTED"
    PRELAUNCH = "PRELAUNCH"
    EARLY_ACCESS = "EARLY_ACCESS"
    ALPHA = "ALPHA"
    BETA = "BETA"
    GA = "GA"
    DEPRECATED = "DEPRECATED"


class MetricDescriptorMetricKind(str, Enum):
    """
    Whether the metric records instantaneous values, changes to a value, etc. Some combinations of `metric_kind` and `value_type` might not be supported.
    """
    METRIC_KIND_UNSPECIFIED = "METRIC_KIND_UNSPECIFIED"
    GAUGE = "GAUGE"
    DELTA = "DELTA"
    CUMULATIVE = "CUMULATIVE"


class MetricDescriptorValueType(str, Enum):
    """
    Whether the measurement is an integer, a floating-point number, etc. Some combinations of `metric_kind` and `value_type` might not be supported.
    """
    VALUE_TYPE_UNSPECIFIED = "VALUE_TYPE_UNSPECIFIED"
    BOOL = "BOOL"
    INT64 = "INT64"
    DOUBLE = "DOUBLE"
    STRING = "STRING"
    DISTRIBUTION = "DISTRIBUTION"
    MONEY = "MONEY"


class MonitoredResourceDescriptorLaunchStage(str, Enum):
    """
    Optional. The launch stage of the monitored resource definition.
    """
    LAUNCH_STAGE_UNSPECIFIED = "LAUNCH_STAGE_UNSPECIFIED"
    UNIMPLEMENTED = "UNIMPLEMENTED"
    PRELAUNCH = "PRELAUNCH"
    EARLY_ACCESS = "EARLY_ACCESS"
    ALPHA = "ALPHA"
    BETA = "BETA"
    GA = "GA"
    DEPRECATED = "DEPRECATED"


class RolloutStatus(str, Enum):
    """
    The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.
    """
    ROLLOUT_STATUS_UNSPECIFIED = "ROLLOUT_STATUS_UNSPECIFIED"
    IN_PROGRESS = "IN_PROGRESS"
    SUCCESS = "SUCCESS"
    CANCELLED = "CANCELLED"
    FAILED = "FAILED"
    PENDING = "PENDING"
    FAILED_ROLLED_BACK = "FAILED_ROLLED_BACK"


class TypeSyntax(str, Enum):
    """
    The source syntax.
    """
    SYNTAX_PROTO2 = "SYNTAX_PROTO2"
    SYNTAX_PROTO3 = "SYNTAX_PROTO3"
