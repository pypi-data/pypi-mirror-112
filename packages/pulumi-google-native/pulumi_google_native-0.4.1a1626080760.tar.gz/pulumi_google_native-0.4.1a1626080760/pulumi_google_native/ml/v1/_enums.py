# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'GoogleCloudMlV1_StudyConfig_MetricSpecGoal',
    'GoogleCloudMlV1_StudyConfig_ParameterSpecScaleType',
    'GoogleCloudMlV1_StudyConfig_ParameterSpecType',
    'GoogleCloudMlV1__AcceleratorConfigType',
    'GoogleCloudMlV1__HyperparameterSpecAlgorithm',
    'GoogleCloudMlV1__HyperparameterSpecGoal',
    'GoogleCloudMlV1__MetricSpecName',
    'GoogleCloudMlV1__ParameterSpecScaleType',
    'GoogleCloudMlV1__ParameterSpecType',
    'GoogleCloudMlV1__PredictionInputDataFormat',
    'GoogleCloudMlV1__PredictionInputOutputDataFormat',
    'GoogleCloudMlV1__StudyConfigAlgorithm',
    'GoogleCloudMlV1__TrainingInputScaleTier',
    'GoogleIamV1__AuditLogConfigLogType',
    'TrialState',
    'VersionFramework',
]


class GoogleCloudMlV1_StudyConfig_MetricSpecGoal(str, Enum):
    """
    Required. The optimization goal of the metric.
    """
    GOAL_TYPE_UNSPECIFIED = "GOAL_TYPE_UNSPECIFIED"
    MAXIMIZE = "MAXIMIZE"
    MINIMIZE = "MINIMIZE"


class GoogleCloudMlV1_StudyConfig_ParameterSpecScaleType(str, Enum):
    """
    How the parameter should be scaled. Leave unset for categorical parameters.
    """
    SCALE_TYPE_UNSPECIFIED = "SCALE_TYPE_UNSPECIFIED"
    UNIT_LINEAR_SCALE = "UNIT_LINEAR_SCALE"
    UNIT_LOG_SCALE = "UNIT_LOG_SCALE"
    UNIT_REVERSE_LOG_SCALE = "UNIT_REVERSE_LOG_SCALE"


class GoogleCloudMlV1_StudyConfig_ParameterSpecType(str, Enum):
    """
    Required. The type of the parameter.
    """
    PARAMETER_TYPE_UNSPECIFIED = "PARAMETER_TYPE_UNSPECIFIED"
    DOUBLE = "DOUBLE"
    INTEGER = "INTEGER"
    CATEGORICAL = "CATEGORICAL"
    DISCRETE = "DISCRETE"


class GoogleCloudMlV1__AcceleratorConfigType(str, Enum):
    """
    The type of accelerator to use.
    """
    ACCELERATOR_TYPE_UNSPECIFIED = "ACCELERATOR_TYPE_UNSPECIFIED"
    NVIDIA_TESLA_K80 = "NVIDIA_TESLA_K80"
    NVIDIA_TESLA_P100 = "NVIDIA_TESLA_P100"
    NVIDIA_TESLA_V100 = "NVIDIA_TESLA_V100"
    NVIDIA_TESLA_P4 = "NVIDIA_TESLA_P4"
    NVIDIA_TESLA_T4 = "NVIDIA_TESLA_T4"
    NVIDIA_TESLA_A100 = "NVIDIA_TESLA_A100"
    TPU_V2 = "TPU_V2"
    TPU_V3 = "TPU_V3"


class GoogleCloudMlV1__HyperparameterSpecAlgorithm(str, Enum):
    """
    Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI Platform hyperparameter tuning algorithm if unspecified.
    """
    ALGORITHM_UNSPECIFIED = "ALGORITHM_UNSPECIFIED"
    GRID_SEARCH = "GRID_SEARCH"
    RANDOM_SEARCH = "RANDOM_SEARCH"


class GoogleCloudMlV1__HyperparameterSpecGoal(str, Enum):
    """
    Required. The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`. Defaults to `MAXIMIZE`.
    """
    GOAL_TYPE_UNSPECIFIED = "GOAL_TYPE_UNSPECIFIED"
    MAXIMIZE = "MAXIMIZE"
    MINIMIZE = "MINIMIZE"


class GoogleCloudMlV1__MetricSpecName(str, Enum):
    """
    metric name.
    """
    METRIC_NAME_UNSPECIFIED = "METRIC_NAME_UNSPECIFIED"
    CPU_USAGE = "CPU_USAGE"
    GPU_DUTY_CYCLE = "GPU_DUTY_CYCLE"


class GoogleCloudMlV1__ParameterSpecScaleType(str, Enum):
    """
    Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
    """
    NONE = "NONE"
    UNIT_LINEAR_SCALE = "UNIT_LINEAR_SCALE"
    UNIT_LOG_SCALE = "UNIT_LOG_SCALE"
    UNIT_REVERSE_LOG_SCALE = "UNIT_REVERSE_LOG_SCALE"


class GoogleCloudMlV1__ParameterSpecType(str, Enum):
    """
    Required. The type of the parameter.
    """
    PARAMETER_TYPE_UNSPECIFIED = "PARAMETER_TYPE_UNSPECIFIED"
    DOUBLE = "DOUBLE"
    INTEGER = "INTEGER"
    CATEGORICAL = "CATEGORICAL"
    DISCRETE = "DISCRETE"


class GoogleCloudMlV1__PredictionInputDataFormat(str, Enum):
    """
    Required. The format of the input data files.
    """
    DATA_FORMAT_UNSPECIFIED = "DATA_FORMAT_UNSPECIFIED"
    JSON = "JSON"
    TEXT = "TEXT"
    TF_RECORD = "TF_RECORD"
    TF_RECORD_GZIP = "TF_RECORD_GZIP"
    CSV = "CSV"


class GoogleCloudMlV1__PredictionInputOutputDataFormat(str, Enum):
    """
    Optional. Format of the output data files, defaults to JSON.
    """
    DATA_FORMAT_UNSPECIFIED = "DATA_FORMAT_UNSPECIFIED"
    JSON = "JSON"
    TEXT = "TEXT"
    TF_RECORD = "TF_RECORD"
    TF_RECORD_GZIP = "TF_RECORD_GZIP"
    CSV = "CSV"


class GoogleCloudMlV1__StudyConfigAlgorithm(str, Enum):
    """
    The search algorithm specified for the study.
    """
    ALGORITHM_UNSPECIFIED = "ALGORITHM_UNSPECIFIED"
    GAUSSIAN_PROCESS_BANDIT = "GAUSSIAN_PROCESS_BANDIT"
    GRID_SEARCH = "GRID_SEARCH"
    RANDOM_SEARCH = "RANDOM_SEARCH"


class GoogleCloudMlV1__TrainingInputScaleTier(str, Enum):
    """
    Required. Specifies the machine types, the number of replicas for workers and parameter servers.
    """
    BASIC = "BASIC"
    STANDARD1 = "STANDARD_1"
    PREMIUM1 = "PREMIUM_1"
    BASIC_GPU = "BASIC_GPU"
    BASIC_TPU = "BASIC_TPU"
    CUSTOM = "CUSTOM"


class GoogleIamV1__AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    ADMIN_READ = "ADMIN_READ"
    DATA_WRITE = "DATA_WRITE"
    DATA_READ = "DATA_READ"


class TrialState(str, Enum):
    """
    The detailed state of a trial.
    """
    STATE_UNSPECIFIED = "STATE_UNSPECIFIED"
    REQUESTED = "REQUESTED"
    ACTIVE = "ACTIVE"
    COMPLETED = "COMPLETED"
    STOPPING = "STOPPING"


class VersionFramework(str, Enum):
    """
    Optional. The machine learning framework AI Platform uses to train this version of the model. Valid values are `TENSORFLOW`, `SCIKIT_LEARN`, `XGBOOST`. If you do not specify a framework, AI Platform will analyze files in the deployment_uri to determine a framework. If you choose `SCIKIT_LEARN` or `XGBOOST`, you must also set the runtime version of the model to 1.4 or greater. Do **not** specify a framework if you're deploying a [custom prediction routine](/ai-platform/prediction/docs/custom-prediction-routines) or if you're using a [custom container](/ai-platform/prediction/docs/use-custom-container).
    """
    FRAMEWORK_UNSPECIFIED = "FRAMEWORK_UNSPECIFIED"
    TENSORFLOW = "TENSORFLOW"
    SCIKIT_LEARN = "SCIKIT_LEARN"
    XGBOOST = "XGBOOST"
