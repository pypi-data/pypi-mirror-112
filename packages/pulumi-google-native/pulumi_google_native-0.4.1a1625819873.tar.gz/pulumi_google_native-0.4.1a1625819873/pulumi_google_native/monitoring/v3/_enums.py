# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AggregationCrossSeriesReducer',
    'AggregationPerSeriesAligner',
    'AlertPolicyCombiner',
    'ContentMatcherMatcher',
    'HttpCheckContentType',
    'HttpCheckRequestMethod',
    'InternalCheckerState',
    'LabelDescriptorValueType',
    'MetricDescriptorLaunchStage',
    'MetricDescriptorMetricKind',
    'MetricDescriptorValueType',
    'MetricThresholdComparison',
    'NotificationChannelVerificationStatus',
    'ResourceGroupResourceType',
    'ServiceLevelObjectiveCalendarPeriod',
    'UptimeCheckConfigSelectedRegionsItem',
]


class AggregationCrossSeriesReducer(str, Enum):
    """
    The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned.
    """
    REDUCE_NONE = "REDUCE_NONE"
    REDUCE_MEAN = "REDUCE_MEAN"
    REDUCE_MIN = "REDUCE_MIN"
    REDUCE_MAX = "REDUCE_MAX"
    REDUCE_SUM = "REDUCE_SUM"
    REDUCE_STDDEV = "REDUCE_STDDEV"
    REDUCE_COUNT = "REDUCE_COUNT"
    REDUCE_COUNT_TRUE = "REDUCE_COUNT_TRUE"
    REDUCE_COUNT_FALSE = "REDUCE_COUNT_FALSE"
    REDUCE_FRACTION_TRUE = "REDUCE_FRACTION_TRUE"
    REDUCE_PERCENTILE99 = "REDUCE_PERCENTILE_99"
    REDUCE_PERCENTILE95 = "REDUCE_PERCENTILE_95"
    REDUCE_PERCENTILE50 = "REDUCE_PERCENTILE_50"
    REDUCE_PERCENTILE05 = "REDUCE_PERCENTILE_05"


class AggregationPerSeriesAligner(str, Enum):
    """
    An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.
    """
    ALIGN_NONE = "ALIGN_NONE"
    ALIGN_DELTA = "ALIGN_DELTA"
    ALIGN_RATE = "ALIGN_RATE"
    ALIGN_INTERPOLATE = "ALIGN_INTERPOLATE"
    ALIGN_NEXT_OLDER = "ALIGN_NEXT_OLDER"
    ALIGN_MIN = "ALIGN_MIN"
    ALIGN_MAX = "ALIGN_MAX"
    ALIGN_MEAN = "ALIGN_MEAN"
    ALIGN_COUNT = "ALIGN_COUNT"
    ALIGN_SUM = "ALIGN_SUM"
    ALIGN_STDDEV = "ALIGN_STDDEV"
    ALIGN_COUNT_TRUE = "ALIGN_COUNT_TRUE"
    ALIGN_COUNT_FALSE = "ALIGN_COUNT_FALSE"
    ALIGN_FRACTION_TRUE = "ALIGN_FRACTION_TRUE"
    ALIGN_PERCENTILE99 = "ALIGN_PERCENTILE_99"
    ALIGN_PERCENTILE95 = "ALIGN_PERCENTILE_95"
    ALIGN_PERCENTILE50 = "ALIGN_PERCENTILE_50"
    ALIGN_PERCENTILE05 = "ALIGN_PERCENTILE_05"
    ALIGN_PERCENT_CHANGE = "ALIGN_PERCENT_CHANGE"


class AlertPolicyCombiner(str, Enum):
    """
    How to combine the results of multiple conditions to determine if an incident should be opened. If condition_time_series_query_language is present, this must be COMBINE_UNSPECIFIED.
    """
    COMBINE_UNSPECIFIED = "COMBINE_UNSPECIFIED"
    AND_ = "AND"
    OR_ = "OR"
    AND_WITH_MATCHING_RESOURCE = "AND_WITH_MATCHING_RESOURCE"


class ContentMatcherMatcher(str, Enum):
    """
    The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
    """
    CONTENT_MATCHER_OPTION_UNSPECIFIED = "CONTENT_MATCHER_OPTION_UNSPECIFIED"
    CONTAINS_STRING = "CONTAINS_STRING"
    NOT_CONTAINS_STRING = "NOT_CONTAINS_STRING"
    MATCHES_REGEX = "MATCHES_REGEX"
    NOT_MATCHES_REGEX = "NOT_MATCHES_REGEX"


class HttpCheckContentType(str, Enum):
    """
    The content type header to use for the check. The following configurations result in errors: 1. Content type is specified in both the headers field and the content_type field. 2. Request method is GET and content_type is not TYPE_UNSPECIFIED 3. Request method is POST and content_type is TYPE_UNSPECIFIED. 4. Request method is POST and a "Content-Type" header is provided via headers field. The content_type field should be used instead.
    """
    TYPE_UNSPECIFIED = "TYPE_UNSPECIFIED"
    URL_ENCODED = "URL_ENCODED"


class HttpCheckRequestMethod(str, Enum):
    """
    The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.
    """
    METHOD_UNSPECIFIED = "METHOD_UNSPECIFIED"
    GET = "GET"
    POST = "POST"


class InternalCheckerState(str, Enum):
    """
    The current operational state of the internal checker.
    """
    UNSPECIFIED = "UNSPECIFIED"
    CREATING = "CREATING"
    RUNNING = "RUNNING"


class LabelDescriptorValueType(str, Enum):
    """
    The type of data that can be assigned to the label.
    """
    STRING = "STRING"
    BOOL = "BOOL"
    INT64 = "INT64"


class MetricDescriptorLaunchStage(str, Enum):
    """
    Optional. The launch stage of the metric definition.
    """
    LAUNCH_STAGE_UNSPECIFIED = "LAUNCH_STAGE_UNSPECIFIED"
    UNIMPLEMENTED = "UNIMPLEMENTED"
    PRELAUNCH = "PRELAUNCH"
    EARLY_ACCESS = "EARLY_ACCESS"
    ALPHA = "ALPHA"
    BETA = "BETA"
    GA = "GA"
    DEPRECATED = "DEPRECATED"


class MetricDescriptorMetricKind(str, Enum):
    """
    Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metric_kind and value_type might not be supported.
    """
    METRIC_KIND_UNSPECIFIED = "METRIC_KIND_UNSPECIFIED"
    GAUGE = "GAUGE"
    DELTA = "DELTA"
    CUMULATIVE = "CUMULATIVE"


class MetricDescriptorValueType(str, Enum):
    """
    Whether the measurement is an integer, a floating-point number, etc. Some combinations of metric_kind and value_type might not be supported.
    """
    VALUE_TYPE_UNSPECIFIED = "VALUE_TYPE_UNSPECIFIED"
    BOOL = "BOOL"
    INT64 = "INT64"
    DOUBLE = "DOUBLE"
    STRING = "STRING"
    DISTRIBUTION = "DISTRIBUTION"
    MONEY = "MONEY"


class MetricThresholdComparison(str, Enum):
    """
    The comparison to apply between the time series (indicated by filter and aggregation) and the threshold (indicated by threshold_value). The comparison is applied on each time series, with the time series on the left-hand side and the threshold on the right-hand side.Only COMPARISON_LT and COMPARISON_GT are supported currently.
    """
    COMPARISON_UNSPECIFIED = "COMPARISON_UNSPECIFIED"
    COMPARISON_GT = "COMPARISON_GT"
    COMPARISON_GE = "COMPARISON_GE"
    COMPARISON_LT = "COMPARISON_LT"
    COMPARISON_LE = "COMPARISON_LE"
    COMPARISON_EQ = "COMPARISON_EQ"
    COMPARISON_NE = "COMPARISON_NE"


class NotificationChannelVerificationStatus(str, Enum):
    """
    Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.
    """
    VERIFICATION_STATUS_UNSPECIFIED = "VERIFICATION_STATUS_UNSPECIFIED"
    UNVERIFIED = "UNVERIFIED"
    VERIFIED = "VERIFIED"


class ResourceGroupResourceType(str, Enum):
    """
    The resource type of the group members.
    """
    RESOURCE_TYPE_UNSPECIFIED = "RESOURCE_TYPE_UNSPECIFIED"
    INSTANCE = "INSTANCE"
    AWS_ELB_LOAD_BALANCER = "AWS_ELB_LOAD_BALANCER"


class ServiceLevelObjectiveCalendarPeriod(str, Enum):
    """
    A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
    """
    CALENDAR_PERIOD_UNSPECIFIED = "CALENDAR_PERIOD_UNSPECIFIED"
    DAY = "DAY"
    WEEK = "WEEK"
    FORTNIGHT = "FORTNIGHT"
    MONTH = "MONTH"
    QUARTER = "QUARTER"
    HALF = "HALF"
    YEAR = "YEAR"


class UptimeCheckConfigSelectedRegionsItem(str, Enum):
    REGION_UNSPECIFIED = "REGION_UNSPECIFIED"
    USA = "USA"
    EUROPE = "EUROPE"
    SOUTH_AMERICA = "SOUTH_AMERICA"
    ASIA_PACIFIC = "ASIA_PACIFIC"
