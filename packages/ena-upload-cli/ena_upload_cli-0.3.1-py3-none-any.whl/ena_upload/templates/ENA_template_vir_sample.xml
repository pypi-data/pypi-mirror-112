<?xml version="1.0" encoding="UTF-8"?>
<?python
import pandas as pd
def attributetest(row, column):
    emptyvalue = [' ', 'nan', 'na']
    if hasattr(row, column) and pd.notna(row[column]) and str(row[column]).lower() not in emptyvalue:
        return True 
    else:
        return False?>
<SAMPLE_SET xmlns:py="http://genshi.edgewall.org/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ftp://ftp.sra.ebi.ac.uk/meta/xsd/sra_1_6/SRA.sample.xsd">
    <py:for each="index, row in df.iterrows()">
    <SAMPLE alias="${row.alias}" center_name="${center}">
        <!--TODO: UNIQUE NAME FOR SAMPLE-->
        <!--TODO: CENTER NAME-->
        <TITLE>${row.title}</TITLE>
        <!--TODO: A SHORT INFORMATIVE DESCRIPTION OF THE SAMPLE-->
        <SAMPLE_NAME>
            <TAXON_ID>${row.taxon_id}</TAXON_ID>
            <!--TODO: PROVIDE NCBI TAXID FOR ORGANISM (e.g. 9606 for human)-->
            <!-- For complete prokaryotic genomes, a taxid should be generate for the strain.
                 Please contact us so we can generate this on your behalf. -->
            <SCIENTIFIC_NAME>${row.scientific_name}</SCIENTIFIC_NAME>
            <!--TODO: SCIENTIFIC NAME AS APPEARS IN NCBI TAXONOMY FOR THE
                TAXON_ID (e.g. homo sapiens)-->
        </SAMPLE_NAME>
        <DESCRIPTION>${row.sample_description}</DESCRIPTION>
        <!--TODO: A LONGER DESCRIPTION OF SAMPLE AND HOW IT DIFFERS FROM
            OTHER SAMPLES-->
        <SAMPLE_ATTRIBUTES>   
            <SAMPLE_ATTRIBUTE>
                <TAG>host common name</TAG>
                <VALUE>${row.host_common_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>host subject id</TAG>
                <VALUE>${row.host_subject_id}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>host health state</TAG>
                <VALUE>${row.host_health_state}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>host sex</TAG>
                <VALUE>${row.host_sex}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>host scientific name</TAG>
                <VALUE>${row.host_scientific_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>collector name</TAG>
                <VALUE>${row.collector_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>collecting institution</TAG>
                <VALUE>${row.collecting_institution}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>isolate</TAG>
                <VALUE>${row.isolate}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic location (country and/or sea)</TAG>
                <VALUE>${row.geographic_location}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>sample capture status</TAG>
                <VALUE>active surveillance in response to outbreak</VALUE>
            </SAMPLE_ATTRIBUTE>
            <py:if test="attributetest(row, 'collection_date')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>collection date</TAG>
                    <VALUE>${row.collection_date}</VALUE>
                </SAMPLE_ATTRIBUTE>  
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_region')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>geographic location (region and locality)</TAG>
                    <VALUE>${row.geographic_location_region}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_latitude')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>geographic location (latitude)</TAG>
                    <VALUE>${row.geographic_location_latitude}</VALUE>
                    <UNITS>DD</UNITS>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_longitude')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>geographic location (longitude)</TAG>
                    <VALUE>${row.geographic_location_longitude}</VALUE>
                    <UNITS>DD</UNITS>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_age')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>host age</TAG>
                    <VALUE>${row.host_age}</VALUE>
                    <UNITS>years</UNITS>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_capture_status')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>sample capture status</TAG>
                    <VALUE>${row.sample_capture_status}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_disease_outcome')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>host disease outcome</TAG>
                    <VALUE>${row.host_disease_outcome}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'virus_identifier')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>virus identifier</TAG>
                    <VALUE>${row.virus_identifier}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'receipt_date')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>receipt date</TAG>
                    <VALUE>${row.receipt_date}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'definition_for_seropositive_sample')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>definition for seropositive sample</TAG>
                    <VALUE>${row.definition_for_seropositive_sample}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'serotype')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>serotype (required for a seropositive sample)</TAG>
                    <VALUE>${row.serotype}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_habitat')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>host habitat</TAG>
                    <VALUE>${row.host_habitat}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'isolation_source_host_associated')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>isolation source host-associated</TAG>
                    <VALUE>${row.isolation_source_host_associated}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_behaviour')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>host behaviour</TAG>
                    <VALUE>${row.host_behaviour}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="hasattr(row, 'isolation_source_non_host_associated')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>isolation source non-host-associated</TAG>
                    <VALUE>${row.isolation_source_non_host_associated}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'subject_exposure')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>subject exposure</TAG>
                    <VALUE>${row.subject_exposure}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'subject_exposure_duration')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>subject exposure duration</TAG>
                    <VALUE>${row.subject_exposure_duration}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'type_exposure')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>type exposure</TAG>
                    <VALUE>${row.type_exposure}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'personal_protective_equipment')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>personal protective equipment</TAG>
                    <VALUE>${row.personal_protective_equipment}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'hospitalisation')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>hospitalisation</TAG>
                    <VALUE>${row.hospitalisation}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'illness_duration')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>illness duration</TAG>
                    <VALUE>${row.illness_duration}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'illness_symptoms')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>illness symptoms</TAG>
                    <VALUE>${row.illness_symptoms}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_storage_conditions')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>sample storage conditions</TAG>
                    <VALUE>${row.sample_storage_conditions}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'gravidity')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>gravidity</TAG>
                    <VALUE>${row.gravidity}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'strain')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>strain</TAG>
                    <VALUE>${row.strain}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_description')">
                <SAMPLE_ATTRIBUTE>
                    <TAG>host_description</TAG>
                    <VALUE>${row.host_description}</VALUE>
                </SAMPLE_ATTRIBUTE>
            </py:if>
            <SAMPLE_ATTRIBUTE>
                <TAG>ENA-CHECKLIST</TAG>
                <VALUE>ERC000033</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL</TAG>
                <VALUE>${tool_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL_VERSION</TAG>
                <VALUE>${tool_version}</VALUE>
            </SAMPLE_ATTRIBUTE>
        </SAMPLE_ATTRIBUTES>
    </SAMPLE>
    </py:for>
</SAMPLE_SET>
