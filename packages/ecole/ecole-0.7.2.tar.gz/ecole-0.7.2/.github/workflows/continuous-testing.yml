name: "Test and deploy"
on:
  push:
    branches: ['**']
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]


jobs:

#  Continuous testing
#  ------------------

  test-from-src:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        image:
          - "ecoleai/ci-linux-src-clang10-py3.6"
          - "ecoleai/ci-linux-src-gcc9-py3.6"
    container:
      image: ${{ matrix.image }}
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: "Configure, build, and test ecole-lib and ecole-py-ext."
        run: bash dev/run.sh --fix-pythonpath configure -- test-lib -- test-py

  test-with-conda:
    strategy:
      matrix:
        os:
          - "ubuntu-20.04"
          - "macos-10.15"
        python: ["3.6", "3.7", "3.8", "3.9"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: "Add python version to requirements."
        run: echo '  - python=${{ matrix.python }}' >> dev/conda.yaml
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Configure, build, and test ecole-lib and ecole-py-ext."
        shell: bash -l {0}
        run: bash dev/run.sh --fix-pythonpath configure -- test-lib -- test-py

  # Currenlty only sanitize address without Python
  test-with-sanitizer:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Configure, build, and test ecole-lib with sanitizer."
        shell: bash -l {0}
        run: bash dev/run.sh --fix-pythonpath configure -D SANITIZE_ADDRESS=ON -- test-lib

  check-code:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Run pre-commit."
        shell: bash -l {0}
        run: bash dev/run.sh --fix-pythonpath configure -- check-code

  test-doc:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Configure and build ecole-py-ext. Build and test documentation."
        shell: bash -l {0}
        run: bash dev/run.sh --fix-pythonpath configure -- test-doc


#  Deploy checkpoint
#  -----------------

  all-tests:
    needs: [ test-from-src, test-with-conda, test-with-sanitizer, test-doc, check-code]
    runs-on: ubuntu-20.04
    steps:
      - name: "All tests were successful."
        run: ""


#  Continuous deploy
#  -----------------

  deploy-latest-doc:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: all-tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with: {fetch-depth: 0}
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Build documentation."
        shell: bash -l {0}
        run: bash dev/run.sh --fix-pythonpath --build-doc-dir=local/docs/latest configure -- build-doc
      - name: "Symlink stable documentation."
        run: |
          version="$(bash dev/run.sh git-version origin/master | grep -E -o '[0-9]+\.[0-9]+')" &&
          cd local/docs/ &&
          ln -sf "${version:?}" "stable"
      - uses: ./.github/actions/push-to-repo
        with:
          git_email: "BotEcole@users.noreply.github.com"
          git_user: "BotEcole"
          ssh_key: "${{ secrets.BOT_ECOLE_SSH_KEY }}"
          repository: "git@github.com:ds4dm/doc.ecole.ai.git"
          repository_subdir: "py/en"
          local_dir: "local/docs/"
          delete_existing: true


#  Release deploy
#  --------------

  test-version:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: all-tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: "Check version file matches the version."
        run: bash dev/run.sh test-version "${GITHUB_REF#refs/tags/}"

  deploy-version-doc:
    needs: test-version
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Build documentation."
        shell: bash -l {0}
        run: |
          version="$(echo "${GITHUB_REF#refs/tags/v}" | grep -E -o '[0-9]+\.[0-9]+')" &&
          bash dev/run.sh --fix-pythonpath --build-doc-dir="local/docs/${version}" configure -- build-doc
      - uses: ./.github/actions/push-to-repo
        with:
          git_email: "BotEcole@users.noreply.github.com"
          git_user: "BotEcole"
          ssh_key: "${{ secrets.BOT_ECOLE_SSH_KEY }}"
          repository: "git@github.com:ds4dm/doc.ecole.ai.git"
          repository_subdir: "py/en"
          local_dir: "local/docs/"
          delete_existing: false

  deploy-pypi:
    runs-on: ubuntu-20.04
    needs: test-version
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@v10
        with: { environment-file: dev/conda.yaml }
      - name: "Build, test, and deploy sdist"
        shell: bash -l {0}
        env:
          TWINE_USERNAME: "${{ secrets.PYPI_USERNAME }}"
          TWINE_PASSWORD: "${{ secrets.PYPI_PASSWORD }}"
        run: bash dev/run.sh test-sdist -- deploy-sdist
