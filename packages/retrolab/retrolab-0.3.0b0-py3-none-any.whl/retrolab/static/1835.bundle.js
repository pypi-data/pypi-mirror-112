(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[1835],{11835:(e,t,n)=>{"use strict";n.r(t),n.d(t,{savingStatusPlugin:()=>_,pathStatusPlugin:()=>w,downloadPlugin:()=>b,openBrowserTabPlugin:()=>f,default:()=>y});var o,a=n(25986),r=n(61426),i=n(60426),d=n(16213),l=n(90665),c=n(58498),s=n(85269),u=n(39529),m=n(24318),g=n(76943),p=n(36735);!function(e){e.clone="docmanager:clone",e.deleteFile="docmanager:delete-file",e.newUntitled="docmanager:new-untitled",e.open="docmanager:open",e.openBrowserTab="docmanager:open-browser-tab",e.reload="docmanager:reload",e.rename="docmanager:rename",e.nameOnSave="docmanager:name-on-save",e.del="docmanager:delete",e.restoreCheckpoint="docmanager:restore-checkpoint",e.save="docmanager:save",e.saveAll="docmanager:save-all",e.saveAs="docmanager:save-as",e.download="docmanager:download",e.toggleAutosave="docmanager:toggle-autosave",e.toggleNameFileOnSave="docmanager:toggle-name-file-on-save",e.showInFileBrowser="docmanager:show-in-file-browser"}(o||(o={}));const v="@jupyterlab/docmanager-extension:plugin",h={id:v,provides:d.IDocumentManager,requires:[c.ISettingRegistry,u.ITranslator],optional:[a.ILabStatus,r.ICommandPalette,a.ILabShell,r.ISessionContextDialogs,l.IDocumentProviderFactory],activate:(e,t,n,a,i,l,c,s)=>{var u;const p=n.load("jupyterlab"),h=e.serviceManager,_=new WeakSet,w={open:(t,n)=>{t.id||(t.id="document-manager-"+ ++F.id),t.title.dataset=Object.assign({type:"document-title"},t.title.dataset),t.isAttached||e.shell.add(t,"main",n||{}),e.shell.activateById(t.id);const o=y.contextForWidget(t);o&&!_.has(o)&&(a&&function(e,t){let n=null;const o=(t,o)=>{"dirty"===o.name&&(!0===o.newValue?n||(n=e.setDirty()):n&&(n.dispose(),n=null))};t.ready.then((()=>{t.model.stateChanged.connect(o),t.model.dirty&&(n=e.setDirty())})),t.disposed.connect((()=>{n&&n.dispose()}))}(a,o),_.add(o))}},b=e.docRegistry,f=e.restored.then((()=>{})),y=new d.DocumentManager({registry:b,manager:h,opener:w,when:f,setBusy:null!==(u=a&&(()=>a.setBusy()))&&void 0!==u?u:void 0,sessionDialogs:c||void 0,translator:n,collaborative:!0,docProviderFactory:null!=s?s:void 0});!function(e,t,n,a,i,l,c){const s=i.load("jupyterlab"),{commands:u,shell:g}=e,p=s.__("File Operations"),h=()=>{const{currentWidget:e}=g;return!(!e||!t.contextForWidget(e))};l&&function(e,t,n,a,i){const l=i.load("jupyterlab"),{commands:c}=e,s=()=>{var o;const a=/[Pp]ath:\s?(.*)\n?/,r=e.contextMenuHitTest((e=>{var t;return!!(null===(t=e.title)||void 0===t?void 0:t.match(a))})),i=null==r?void 0:r.title.match(a);return null!==(o=i&&t.findWidget(i[1],null))&&void 0!==o?o:n.currentWidget},u=()=>{const{currentWidget:e}=n;return!(!e||!t.contextForWidget(e))};c.addCommand(o.clone,{label:()=>l.__("New View for %1",C(s(),t)),isEnabled:u,execute:e=>{const n=s(),o=e.options||{mode:"split-right"};if(!n)return;const r=t.cloneWidget(n);r&&a.open(r,o)}}),c.addCommand(o.rename,{label:()=>{let e=C(s(),t);return e&&(e=" "+e),l.__("Rename%1…",e)},isEnabled:u,execute:()=>{if(u()){const e=t.contextForWidget(s());return(0,d.renameDialog)(t,e.path)}}}),c.addCommand(o.del,{label:()=>l.__("Delete %1",C(s(),t)),isEnabled:u,execute:async()=>{if(u()){const n=t.contextForWidget(s());if(!n)return;(await(0,r.showDialog)({title:l.__("Delete"),body:l.__("Are you sure you want to delete %1",n.path),buttons:[r.Dialog.cancelButton({label:l.__("Cancel")}),r.Dialog.warnButton({label:l.__("Delete")})]})).button.accept&&await e.commands.execute("docmanager:delete-file",{path:n.path})}}}),c.addCommand(o.showInFileBrowser,{label:()=>l.__("Show in File Browser"),isEnabled:u,execute:async()=>{const e=s(),n=e&&t.contextForWidget(e);n&&(await c.execute("filebrowser:activate",{path:n.path}),await c.execute("filebrowser:go-to-path",{path:n.path}))}})}(e,t,l,n,i),u.addCommand(o.deleteFile,{label:()=>`Delete ${C(g.currentWidget,t)}`,execute:e=>{const n=void 0===e.path?"":e.path;if(!n){const e=o.deleteFile;throw new Error(`A non-empty path is required for ${e}.`)}return t.deleteFile(n)}}),u.addCommand(o.nameOnSave,{label:()=>s.__("Rename %1…",C(g.currentWidget,t)),isEnabled:h,execute:()=>{if(h()){const e=t.contextForWidget(g.currentWidget);return(0,d.nameOnSaveDialog)(t,e)}}}),u.addCommand(o.newUntitled,{execute:e=>{const n=e.error||s.__("Error"),o=void 0===e.path?"":e.path,a={type:e.type,path:o};return"file"===e.type&&(a.ext=e.ext||".txt"),t.services.contents.newUntitled(a).catch((e=>(0,r.showErrorMessage)(n,e)))},label:e=>e.label||`New ${e.type}`}),u.addCommand(o.open,{execute:e=>{const n=void 0===e.path?"":e.path,o=e.factory||void 0,a=null==e?void 0:e.kernel,r=e.options||void 0;return t.services.contents.get(n,{content:!1}).then((()=>t.openOrReveal(n,o,a,r)))},icon:e=>e.icon||"",label:e=>e.label||e.factory,mnemonic:e=>e.mnemonic||-1}),u.addCommand(o.reload,{label:()=>s.__("Reload %1 from Disk",C(g.currentWidget,t)),caption:s.__("Reload contents from disk"),isEnabled:h,execute:()=>{if(!h())return;const e=t.contextForWidget(g.currentWidget),n=C(g.currentWidget,t);return e?e.model.dirty?(0,r.showDialog)({title:s.__("Reload %1 from Disk",n),body:s.__("Are you sure you want to reload the %1 from the disk?",n),buttons:[r.Dialog.cancelButton({label:s.__("Cancel")}),r.Dialog.warnButton({label:s.__("Reload")})]}).then((t=>{if(t.button.accept&&!e.isDisposed)return e.revert()})):e.isDisposed?void 0:e.revert():(0,r.showDialog)({title:s.__("Cannot Reload"),body:s.__("No context found for current widget!"),buttons:[r.Dialog.okButton({label:s.__("Ok")})]})}}),u.addCommand(o.restoreCheckpoint,{label:()=>s.__("Revert %1 to Checkpoint",C(g.currentWidget,t)),caption:s.__("Revert contents to previous checkpoint"),isEnabled:h,execute:()=>{if(!h())return;const e=t.contextForWidget(g.currentWidget);return e?e.listCheckpoints().then((n=>{if(n.length<1)return;const o=n[n.length-1];if(!o)return;const a=C(g.currentWidget,t);return(0,r.showDialog)({title:s.__("Revert %1 to checkpoint",a),body:new x(o,s,a),buttons:[r.Dialog.cancelButton({label:s.__("Cancel")}),r.Dialog.warnButton({label:s.__("Revert")})]}).then((t=>{if(!e.isDisposed)return t.button.accept?e.model.readOnly?e.revert():e.restoreCheckpoint().then((()=>e.revert())):void 0}))})):(0,r.showDialog)({title:s.__("Cannot Revert"),body:s.__("No context found for current widget!"),buttons:[r.Dialog.okButton({label:s.__("Ok")})]})}}),u.addCommand(o.save,{label:()=>s.__("Save %1",C(g.currentWidget,t)),caption:s.__("Save and create checkpoint"),isEnabled:()=>{const{currentWidget:e}=g;if(!e)return!1;const n=t.contextForWidget(e);return!!(n&&n.contentsModel&&n.contentsModel.writable)},execute:()=>{if(h()){const e=t.contextForWidget(g.currentWidget);return e?e.model.readOnly?(0,r.showDialog)({title:s.__("Cannot Save"),body:s.__("Document is read-only"),buttons:[r.Dialog.okButton({label:s.__("Ok")})]}):e.save(!0).then((()=>e.createCheckpoint())).catch((e=>{if("Cancel"!==e.message)throw e})):(0,r.showDialog)({title:s.__("Cannot Save"),body:s.__("No context found for current widget!"),buttons:[r.Dialog.okButton({label:s.__("Ok")})]})}}}),u.addCommand(o.saveAll,{label:()=>s.__("Save All"),caption:s.__("Save all open documents"),isEnabled:()=>(0,m.some)((0,m.map)(g.widgets("main"),(e=>t.contextForWidget(e))),(e=>{var t,n;return null!==(n=null===(t=null==e?void 0:e.contentsModel)||void 0===t?void 0:t.writable)&&void 0!==n&&n})),execute:()=>{const e=[],n=new Set;return(0,m.each)(g.widgets("main"),(o=>{const a=t.contextForWidget(o);!a||a.model.readOnly||n.has(a.path)||(n.add(a.path),e.push(a.save()))})),Promise.all(e)}}),u.addCommand(o.saveAs,{label:()=>s.__("Save %1 As…",C(g.currentWidget,t)),caption:s.__("Save with new path"),isEnabled:h,execute:()=>{if(h()){const e=t.contextForWidget(g.currentWidget);return e?e.saveAs():(0,r.showDialog)({title:s.__("Cannot Save"),body:s.__("No context found for current widget!"),buttons:[r.Dialog.okButton({label:s.__("Ok")})]})}}}),u.addCommand(o.toggleAutosave,{label:s.__("Autosave Documents"),isToggled:()=>t.autosave,execute:()=>{const e=!t.autosave,n="autosave";return a.set(v,n,e).catch((e=>{console.error(`Failed to set ${v}:${n} - ${e.message}`)}))}}),u.addCommand(o.toggleNameFileOnSave,{label:s.__("Name File on First Save"),isToggled:()=>t.nameFileOnSave,execute:()=>{const e=!t.nameFileOnSave,n="nameFileOnSave";return a.set(v,n,e).catch((e=>{console.error(`Failed to set ${v}:${n} - ${e.message}`)}))}}),t.optionChanged.connect((()=>{var e;const n="nameFileOnSave",o=null===(e=a.plugins[v])||void 0===e?void 0:e.data.user[n];o==t.nameFileOnSave&&a.set(v,n,!o).catch((e=>{console.error(`Failed to set ${v}:${n} - ${e.message}`)}))}));const _=new RegExp("^untitled","i");t.activateRequested.connect(((e,t)=>{const n=e.findWidget(t);n&&n.context.saveState.connect(((t,o)=>{if(e.nameFileOnSave&&n===g.currentWidget){const a=t.contentsModel;if("completed manually"===o&&a&&1==!a.renamed&&_.test(a.name)){const t=e.contextForWidget(n);return(0,d.nameOnSaveDialog)(e,t)}}}))})),c&&[o.reload,o.restoreCheckpoint,o.save,o.saveAs,o.toggleAutosave].forEach((e=>{c.addItem({command:e,category:p})}))}(e,y,w,t,n,l,i);const D=t=>{const n=t.get("autosave").composite;y.autosave=!0!==n&&!1!==n||n,e.commands.notifyCommandChanged(o.toggleAutosave);const a=t.get("autosaveInterval").composite;y.autosaveInterval=a||120;const r=t.get("nameFileOnSave").composite;y.nameFileOnSave!=r&&(y.nameFileOnSave=r,e.commands.notifyCommandChanged(o.nameOnSave));const i=t.get("defaultViewers").composite,d={};Object.keys(i).forEach((e=>{b.getFileType(e)?(b.getWidgetFactory(i[e])||console.warn(`Document viewer ${i[e]} not found`),d[e]=i[e]):console.warn(`File Type ${e} not found`)})),(0,m.each)(b.fileTypes(),(e=>{try{b.setDefaultWidgetFactory(e.name,d[e.name])}catch(t){console.warn(`Failed to set default viewer ${d[e.name]} for file type ${e.name}`)}}))};return Promise.all([t.load(v),e.restored]).then((([e])=>{e.changed.connect(D),D(e)})).catch((e=>{console.error(e.message)})),t.transform(v,{fetch:e=>{const t=(0,m.toArray)(b.fileTypes()).map((e=>e.name)).join("    \n"),n=(0,m.toArray)(b.widgetFactories()).map((e=>e.name)).join("    \n"),o=p.__('Overrides for the default viewers for file types.\nSpecify a mapping from file type name to document viewer name, for example:\n\ndefaultViewers: {\n  markdown: "Markdown Preview"\n}\n\nIf you specify non-existent file types or viewers, or if a viewer cannot\nopen a given file type, the override will not function.\n\nAvailable viewers:\n%1\n\nAvailable file types:\n%2',n,t),a=g.JSONExt.deepCopy(e.schema);return a.properties.defaultViewers.description=o,Object.assign(Object.assign({},e),{schema:a})}}),b.changed.connect((()=>t.reload(v))),y}},_={id:"@jupyterlab/docmanager-extension:saving-status",autoStart:!0,requires:[d.IDocumentManager,a.ILabShell,u.ITranslator],optional:[s.IStatusBar],activate:(e,t,n,o,a)=>{if(!a)return;const r=new d.SavingStatus({docManager:t,translator:o});r.model.widget=n.currentWidget,n.currentChanged.connect((()=>{r.model.widget=n.currentWidget})),a.registerStatusItem(_.id,{item:r,align:"middle",isActive:()=>!0,activeStateChanged:r.model.stateChanged})}},w={id:"@jupyterlab/docmanager-extension:path-status",autoStart:!0,requires:[d.IDocumentManager,a.ILabShell],optional:[s.IStatusBar],activate:(e,t,n,o)=>{if(!o)return;const a=new d.PathStatus({docManager:t});a.model.widget=n.currentWidget,n.currentChanged.connect((()=>{a.model.widget=n.currentWidget})),o.registerStatusItem(w.id,{item:a,align:"right",rank:0,isActive:()=>!0})}},b={id:"@jupyterlab/docmanager-extension:download",autoStart:!0,requires:[u.ITranslator,d.IDocumentManager],optional:[r.ICommandPalette],activate:(e,t,n,a)=>{const i=t.load("jupyterlab"),{commands:d,shell:l}=e,c=()=>{const{currentWidget:e}=l;return!(!e||!n.contextForWidget(e))};d.addCommand(o.download,{label:i.__("Download"),caption:i.__("Download the file to your computer"),isEnabled:c,execute:()=>{if(c()){const e=n.contextForWidget(l.currentWidget);return e?e.download():(0,r.showDialog)({title:i.__("Cannot Download"),body:i.__("No context found for current widget!"),buttons:[r.Dialog.okButton({label:i.__("OK")})]})}}});const s=i.__("File Operations");a&&a.addItem({command:o.download,category:s})}},f={id:"@jupyterlab/docmanager-extension:open-browser-tab",autoStart:!0,requires:[u.ITranslator,d.IDocumentManager],activate:(e,t,n)=>{const a=t.load("jupyterlab"),{commands:r}=e;r.addCommand(o.openBrowserTab,{execute:e=>{const t=void 0===e.path?"":e.path;if(t)return n.services.contents.getDownloadUrl(t).then((e=>{const t=window.open();if(!t)throw new Error("Failed to open new browser tab.");t.opener=null,t.location.href=e}))},icon:e=>e.icon||"",label:()=>a.__("Open in New Browser Tab")})}},y=[h,w,_,b,f];class x extends p.Widget{constructor(e,t,n="notebook"){super({node:F.createRevertConfirmNode(e,n,t)})}}function C(e,t){if(!e)return"File";const n=t.contextForWidget(e);if(!n)return"";const o=t.registry.getFileTypesForPath(n.path);return o.length&&o[0].displayName?o[0].displayName:"File"}var F;!function(e){e.id=0,e.createRevertConfirmNode=function(e,t,n){const o=document.createElement("div"),a=document.createElement("p"),r=document.createTextNode(n.__("Are you sure you want to revert the %1 to the latest checkpoint? ",t)),d=document.createElement("strong");d.textContent=n.__("This cannot be undone."),a.appendChild(r),a.appendChild(d);const l=document.createElement("p"),c=document.createTextNode(n.__("The checkpoint was last updated at: ")),s=document.createElement("p"),u=new Date(e.last_modified);return s.style.textAlign="center",s.textContent=i.Time.format(u,"dddd, MMMM Do YYYY, h:mm:ss a")+" ("+i.Time.formatHuman(u)+")",l.appendChild(c),l.appendChild(s),o.appendChild(a),o.appendChild(l),o}}(F||(F={}))}}]);