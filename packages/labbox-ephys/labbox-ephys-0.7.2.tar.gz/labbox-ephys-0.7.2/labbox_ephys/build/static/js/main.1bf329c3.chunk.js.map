{"version":3,"sources":["python/labbox_ephys/extensions/pluginInterface/misc.ts","python/labbox_ephys/extensions/pluginInterface/workspaceReducer.ts","python/labbox_ephys/extensions/pluginInterface/WorkspaceRoute.ts","python/labbox_ephys/extensions/theme.ts","App.tsx","registerExtensions.ts","reportWebVitals.ts","index.tsx"],"names":["parseWorkspaceUri","workspaceUri","feedUri","undefined","feedId","startsWith","split","sortingCurationReducer","state","action","type","curation","uid","unitId","labels","labelsByUnit","includes","label","sort","filter","l","mergeGroups","simplifyMergeGroups","unitIds","map","g","x","intersection","a","b","union","mg","newMergeGroups","somethingChanged","i","length","g1","j","g2","workspaceReducer","s","recordings","r","recordingId","recording","recordingIds","sortings","sortingId","sorting","sortingIds","unitMetricsForSorting","unitMetricsUri","metricsUri","queryString","params","keys","Object","key","encodeURIComponent","join","themeOptions","palette","primary","deepPurple","secondary","indigo","overrides","MuiAccordionSummary","root","minHeight","maxHeight","paddingTop","MuiToolbar","regular","MuiTabs","MuiTab","padding","theme","createMuiTheme","App","version","mainWindowPlugin","usePlugins","p","name","serverInfo","useContext","LabboxProviderContext","location","useLocation","history","useHistory","useMemo","workspace","QueryString","parse","search","slice","defaultFeedId","workspaceRoute","pathList","pathname","page","Error","routeFromLocation","workspaceRouteDispatch","useCallback","newLocation","route","queryParams","locationFromRoute","newRoute","workspaceRouteReducer","push","useReducer","workspaceDispatch2","handleWorkspaceSubfeedMessages","messages","msg","forEach","appendWorkspaceMessages","useSubfeed","subfeedName","onMessages","appendMessages","workspaceDispatch","className","component","registerExtensions","context","activate_mainwindow","activate","activate_workspaceview","activate_mountainview","activate_averagewaveforms","activate_clusters","activate_correlograms","activate_electrodegeometry","activate_firetrack","activate_pythonsnippets","activate_snippets","activate_spikeamplitudes","activate_timeseries","activate_unitstable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiConfig","window","hostname","webSocketUrl","baseSha1Url","baseFeedUrl","config","webSocketPort","httpPort","extensionContext","createExtensionContext","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bf329c3.chunk.js","sourcesContent":["export const parseWorkspaceUri = (workspaceUri: string | undefined): {feedId: string | undefined, feedUri: string | undefined} => {\n    if (!workspaceUri) return {feedUri: undefined, feedId: undefined}\n    if (!workspaceUri.startsWith('workspace://')) {\n        return {feedUri: undefined, feedId: undefined}\n    }\n    const a = workspaceUri.split('?')[0].split('/')\n    const feedId = a[2] || undefined\n    if (!feedId) return {feedUri: undefined, feedId: undefined}\n    return {\n        feedId: feedId,\n        feedUri: `feed://${feedId}`\n    }\n}","import { Recording } from \"./Recording\"\nimport { Sorting } from \"./Sorting\"\nimport { SortingCuration, SortingCurationAction } from \"./SortingCuration\"\n\n\nexport type WorkspaceState = {\n    recordings: Recording[]\n    sortings: Sorting[]\n}\n\ntype AddRecordingWorkspaceAction = {\n    type: 'ADD_RECORDING'\n    recording: Recording\n}\n\ntype DeleteRecordingsWorkspaceAction = {\n    type: 'DELETE_RECORDINGS'\n    recordingIds: string[]\n}\n\ntype AddSortingsWorkspaceAction = {\n    type: 'ADD_SORTING'\n    sorting: Sorting\n}\n\ntype DeleteSortingsWorkspaceAction = {\n    type: 'DELETE_SORTINGS'\n    sortingIds: string[]\n}\n\ntype DeleteSortingsForRecordingsWorkspaceAction = {\n    type: 'DELETE_SORTINGS_FOR_RECORDINGS'\n    recordingIds: string[]\n}\n\nexport interface SetUnitMetricsForSortingWorkspaceAction {\n    type: 'SET_UNIT_METRICS_FOR_SORTING'\n    unitMetricsForSorting: {\n        sortingId: string\n        metricsUri: string\n    }\n}\n\nexport type WorkspaceAction = AddRecordingWorkspaceAction | DeleteRecordingsWorkspaceAction | AddSortingsWorkspaceAction | DeleteSortingsWorkspaceAction | DeleteSortingsForRecordingsWorkspaceAction | SetUnitMetricsForSortingWorkspaceAction\n\nexport const sortingCurationReducer = (state: SortingCuration, action: SortingCurationAction): SortingCuration => {\n    if (action.type === 'SET_CURATION') {\n        return action.curation\n    }\n    else if (action.type === 'ADD_UNIT_LABEL') {\n        const uid = action.unitId + ''\n        const labels = (state.labelsByUnit || {})[uid] || []\n        if (!labels.includes(action.label)) {\n            return {\n                ...state,\n                labelsByUnit: {\n                    ...state.labelsByUnit,\n                    [uid]: [...labels, action.label].sort()\n                }\n            }\n        }\n        else return state\n    }\n    else if (action.type === 'REMOVE_UNIT_LABEL') {\n        const uid = action.unitId + ''\n        const labels = (state.labelsByUnit || {})[uid] || []\n        if (labels.includes(action.label)) {\n            return {\n                ...state,\n                labelsByUnit: {\n                    ...state.labelsByUnit,\n                    [uid]: labels.filter(l => (l !== action.label))\n                }\n            }\n        }\n        else return state\n    }\n    else if (action.type === 'MERGE_UNITS') {\n        return {\n            ...state,\n            mergeGroups: simplifyMergeGroups([...(state.mergeGroups || []), action.unitIds])\n        }\n    }\n    else if (action.type === 'UNMERGE_UNITS') {\n        return {\n            ...state,\n            mergeGroups: simplifyMergeGroups((state.mergeGroups || []).map(g => (g.filter(x => (!action.unitIds.includes(x))))))\n        }\n    }\n    else return state\n}\n\nconst workspaceReducer = (s: WorkspaceState, a: WorkspaceAction): WorkspaceState => {\n    switch (a.type) {\n        case 'ADD_RECORDING': return { ...s, recordings: [...s.recordings.filter(r => (r.recordingId !== a.recording.recordingId)), a.recording] }\n        case 'DELETE_RECORDINGS': return { ...s, recordings: s.recordings.filter(x => !a.recordingIds.includes(x.recordingId)) }\n        case 'ADD_SORTING': return { ...s, sortings: [...s.sortings.filter(x => (x.sortingId !== a.sorting.sortingId)), a.sorting] }\n        case 'DELETE_SORTINGS': return { ...s, sortings: s.sortings.filter(x => !a.sortingIds.includes(x.sortingId)) }\n        case 'DELETE_SORTINGS_FOR_RECORDINGS': return { ...s, sortings: s.sortings.filter(x => !a.recordingIds.includes(x.recordingId)) }\n        // case 'ADD_UNIT_LABEL':\n        // case 'REMOVE_UNIT_LABEL':\n        // case 'MERGE_UNITS':\n        // case 'UNMERGE_UNITS':\n        //     return {...s, sortings: s.sortings.map(x => (x.sortingId === a.sortingId) ? {...x, curation: sortingCurationReducer(x.curation || {}, a)} : x)}\n        case 'SET_UNIT_METRICS_FOR_SORTING':\n            return {...s, sortings: s.sortings.map(x => (x.sortingId === a.unitMetricsForSorting.sortingId) ? {...x, unitMetricsUri: a.unitMetricsForSorting.metricsUri} : x)}\n        default: return s\n    }\n}\n\nexport type WorkspaceDispatch = (a: WorkspaceAction) => void\n\nconst intersection = (a: number[], b: number[]) => (\n    a.filter(x => (b.includes(x)))\n)\nconst union = (a: number[], b: number[]) => (\n    [...a, ...b.filter(x => (!a.includes(x)))].sort()\n)\n\nconst simplifyMergeGroups = (mg: (number[])[]): (number[])[] => {\n    const newMergeGroups = mg.map(g => [...g]) // make a copy\n    let somethingChanged = true\n    while (somethingChanged) {\n        somethingChanged = false\n        for (let i = 0; i < newMergeGroups.length; i ++) {\n            const g1 = newMergeGroups[i]\n            for (let j = i + 1; j < newMergeGroups.length; j ++) {\n                const g2 = newMergeGroups[j]\n                if (intersection(g1, g2).length > 0) {\n                    newMergeGroups[i] = union(g1, g2)\n                    newMergeGroups[j] = []\n                    somethingChanged = true\n                }\n            }\n        }\n    }\n    return newMergeGroups.filter(g => (g.length >= 2))\n}\n\nexport default workspaceReducer","import { ServerInfo } from 'labbox/lib/LabboxProvider'\nimport QueryString from 'querystring'\n\ntype Page = 'recordings' | 'recording' | 'sorting'\nexport const isWorkspacePage = (x: string): x is Page => {\n    return ['recordings', 'recording', 'sorting'].includes(x)\n}\n\ntype WorkspaceRecordingsRoute = {\n    page: 'recordings',\n    workspaceUri?: string\n}\ntype WorspaceRecordingRoute = {\n    page: 'recording',\n    recordingId: string,\n    workspaceUri?: string\n}\ntype WorspaceSortingRoute = {\n    page: 'sorting',\n    recordingId: string,\n    sortingId: string,\n    workspaceUri?: string\n}\nexport type WorkspaceRoute = WorkspaceRecordingsRoute | WorspaceRecordingRoute | WorspaceSortingRoute\ntype GotoRecordingsPageAction = {\n    type: 'gotoRecordingsPage'\n}\ntype GotoRecordingPageAction = {\n    type: 'gotoRecordingPage',\n    recordingId: string\n}\ntype GotoSortingPageAction = {\n    type: 'gotoSortingPage',\n    recordingId: string,\n    sortingId: string\n}\nexport type WorkspaceRouteAction = GotoRecordingsPageAction | GotoRecordingPageAction | GotoSortingPageAction\nexport type WorkspaceRouteDispatch = (a: WorkspaceRouteAction) => void\n\nexport interface LocationInterface {\n    pathname: string\n    search: string\n}\n\nexport interface HistoryInterface {\n    location: LocationInterface\n    push: (x: LocationInterface) => void\n}\n\nexport const routeFromLocation = (location: LocationInterface, serverInfo: ServerInfo | null): WorkspaceRoute => {\n    const pathList = location.pathname.split('/')\n\n    const query = QueryString.parse(location.search.slice(1));\n    const workspace = (query.workspace as string) || 'default'\n    const defaultFeedId = serverInfo?.defaultFeedId\n    const workspaceUri = workspace.startsWith('workspace://') ? workspace : (defaultFeedId ? `workspace://${defaultFeedId}/${workspace}` : undefined)\n\n    const page = pathList[1] || 'recordings'\n    if (!isWorkspacePage(page)) throw Error(`Invalid page: ${page}`)\n    switch (page) {\n        case 'recordings': return {\n            workspaceUri,\n            page\n        }\n        case 'recording': return {\n            workspaceUri,\n            page,\n            recordingId: pathList[2]\n        }\n        case 'sorting': return {\n            workspaceUri,\n            page,\n            recordingId: pathList[2] || '',\n            sortingId: pathList[3] || ''\n        }\n        default: return {\n            workspaceUri,\n            page: 'recordings'\n        }\n    }\n}\n\nexport const locationFromRoute = (route: WorkspaceRoute) => {\n    const queryParams: { [key: string]: string } = {}\n    if (route.workspaceUri) {\n        queryParams['workspace'] = route.workspaceUri\n    }\n    switch (route.page) {\n        case 'recordings': return {\n            pathname: `/`,\n            search: queryString(queryParams)\n        }\n        case 'recording': return {\n            pathname: `/recording/${route.recordingId}`,\n            search: queryString(queryParams)\n        }\n        case 'sorting': return {\n            pathname: `/sorting/${route.recordingId}/${route.sortingId}`,\n            search: queryString(queryParams)\n        }\n    }\n}\n\nvar queryString = (params: { [key: string]: string }) => {\n    const keys = Object.keys(params)\n    if (keys.length === 0) return ''\n    return '?' + (\n        keys.map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\n        }).join('&')\n    )\n}\n\nexport const workspaceRouteReducer = (s: WorkspaceRoute, a: WorkspaceRouteAction): WorkspaceRoute => {\n    let newRoute: WorkspaceRoute = s\n    switch (a.type) {\n        case 'gotoRecordingsPage': newRoute = {\n            page: 'recordings',\n            workspaceUri: s.workspaceUri\n        }; break;\n        case 'gotoRecordingPage': newRoute = {\n            page: 'recording',\n            recordingId: a.recordingId,\n            workspaceUri: s.workspaceUri\n        }; break;\n        case 'gotoSortingPage': newRoute = {\n            page: 'sorting',\n            recordingId: a.recordingId,\n            sortingId: a.sortingId,\n            workspaceUri: s.workspaceUri\n        }; break\n    }\n    return newRoute\n}","// LABBOX-CUSTOM ////////////////\nimport { deepPurple, indigo } from '@material-ui/core/colors';\nimport { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\n\n\nconst themeOptions: ThemeOptions = {\n    palette: {\n        primary: deepPurple,\n        secondary: indigo,\n    },\n    overrides: {\n        MuiAccordionSummary: {\n            root: {\n                '&$expanded': {\n                    minHeight: 0,\n                    maxHeight: 30,\n                    paddingTop: 10\n                },\n                minHeight: 0\n            }\n        },\n        MuiToolbar: {\n            regular: {\n                minHeight: 48,\n                '@media(min-width:600px)' : {\n                    minHeight: 48\n                }\n            }\n        },\n        MuiTabs: {\n            root: {\n                minHeight: 30,\n                maxHeight: 30\n            }\n        },\n        MuiTab: {\n            root: {\n                minHeight: 30,\n                maxHeight: 30,\n                padding: '6px 0px'\n            }\n        }\n        // MuiTableCell: {\n        //     root: {  //This can be referred from Material UI API documentation. \n        //         padding: '4px 8px',\n        //         backgroundColor: \"#fafafa\",\n        //     }\n        // },\n    },\n}\n/////////////////////////////////\n\nconst theme = createMuiTheme(themeOptions);\n\nexport default theme;","import { MuiThemeProvider } from '@material-ui/core';\nimport { LabboxProviderContext, usePlugins, useSubfeed } from 'labbox';\nimport QueryString from 'querystring';\nimport React, { useCallback, useContext, useMemo, useReducer } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { LabboxPlugin, MainWindowPlugin, WorkspaceRoute } from './python/labbox_ephys/extensions/pluginInterface';\nimport { parseWorkspaceUri } from './python/labbox_ephys/extensions/pluginInterface/misc';\nimport workspaceReducer, { WorkspaceAction } from './python/labbox_ephys/extensions/pluginInterface/workspaceReducer';\nimport { locationFromRoute, routeFromLocation, WorkspaceRouteAction, workspaceRouteReducer } from './python/labbox_ephys/extensions/pluginInterface/WorkspaceRoute';\nimport theme from './python/labbox_ephys/extensions/theme';\n\nfunction App({ version }: { version: string }) {\n  const plugins = usePlugins<LabboxPlugin>()\n  const mainWindowPlugin = plugins.filter(p => (p.name === 'MainWindow'))[0] as any as MainWindowPlugin\n\n  const { serverInfo } = useContext(LabboxProviderContext)\n\n  const location = useLocation()\n  const history = useHistory()\n  const workspaceUri = useMemo(() => {\n    const query = QueryString.parse(location.search.slice(1));\n    const workspace = (query.workspace as string) || 'default'\n    const defaultFeedId = serverInfo?.defaultFeedId\n    const workspaceUri = workspace.startsWith('workspace://') ? workspace : (defaultFeedId ? `workspace://${defaultFeedId}/${workspace}` : undefined)\n    return workspaceUri\n  }, [location.search, serverInfo])\n\n  const workspaceRoute: WorkspaceRoute = useMemo(() => {\n    return routeFromLocation(location, serverInfo)\n  }, [location, serverInfo])\n\n  // const [workspaceRoute, workspaceRouteDispatch] = useReducer(workspaceRouteReducer, {page: 'main'})\n\n  const workspaceRouteDispatch = useCallback(\n    (a: WorkspaceRouteAction) => {\n      const newRoute: WorkspaceRoute = workspaceRouteReducer(workspaceRoute, a)\n      const newLocation = locationFromRoute(newRoute)\n      if ((location.pathname !== newLocation.pathname) || (location.search !== newLocation.search)) {\n        history.push({ ...location, ...newLocation })\n      }\n    },\n    [workspaceRoute, history, location]\n  )\n\n  const [workspace, workspaceDispatch2] = useReducer(workspaceReducer, useMemo(() => ({ recordings: [], sortings: [] }), []))\n  const handleWorkspaceSubfeedMessages = useCallback((messages: any[]) => {\n    messages.filter(msg => msg.action).forEach(msg => workspaceDispatch2(msg.action))\n  }, [])\n\n  const { feedUri } = parseWorkspaceUri(workspaceUri)\n\n  const subfeedName = 'main'\n\n  const { appendMessages: appendWorkspaceMessages } = useSubfeed({ feedUri, subfeedName, onMessages: handleWorkspaceSubfeedMessages })\n  const workspaceDispatch = useCallback((a: WorkspaceAction) => {\n    appendWorkspaceMessages([{ action: a }])\n  }, [appendWorkspaceMessages])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            mainWindowPlugin ? (\n              <mainWindowPlugin.component\n                {...{ workspace, workspaceDispatch, workspaceRoute, workspaceRouteDispatch, version }}\n              />\n            ) : (<div>No main window plugin</div>)\n          }\n        </header>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This file was automatically generated by jinjaroot. Do not edit directly. See the .jinjaroot dir.\n\nimport { LabboxExtensionContext } from './python/labbox_ephys/extensions/pluginInterface'\n\nconst registerExtensions = async (context: LabboxExtensionContext) => {\n    const {activate: activate_mainwindow} = await import('./python/labbox_ephys/extensions/mainwindow/mainwindow')\n    activate_mainwindow(context)\n    const {activate: activate_workspaceview} = await import('./python/labbox_ephys/extensions/workspaceview/workspaceview')\n    activate_workspaceview(context)\n    const {activate: activate_mountainview} = await import('./python/labbox_ephys/extensions/mountainview/mountainview')\n    activate_mountainview(context)\n    const {activate: activate_averagewaveforms} = await import('./python/labbox_ephys/extensions/averagewaveforms/averagewaveforms')\n    activate_averagewaveforms(context)\n    const {activate: activate_clusters} = await import('./python/labbox_ephys/extensions/clusters/clusters')\n    activate_clusters(context)\n    const {activate: activate_correlograms} = await import('./python/labbox_ephys/extensions/correlograms/correlograms')\n    activate_correlograms(context)\n    const {activate: activate_electrodegeometry} = await import('./python/labbox_ephys/extensions/electrodegeometry/electrodegeometry')\n    activate_electrodegeometry(context)\n    const {activate: activate_firetrack} = await import('./python/labbox_ephys/extensions/firetrack/firetrack')\n    activate_firetrack(context)\n    const {activate: activate_pythonsnippets} = await import('./python/labbox_ephys/extensions/pythonsnippets/pythonsnippets')\n    activate_pythonsnippets(context)\n    const {activate: activate_snippets} = await import('./python/labbox_ephys/extensions/snippets/snippets')\n    activate_snippets(context)\n    const {activate: activate_spikeamplitudes} = await import('./python/labbox_ephys/extensions/spikeamplitudes/spikeamplitudes')\n    activate_spikeamplitudes(context)\n    const {activate: activate_timeseries} = await import('./python/labbox_ephys/extensions/timeseries/timeseries')\n    activate_timeseries(context)\n    const {activate: activate_unitstable} = await import('./python/labbox_ephys/extensions/unitstable/unitstable')\n    activate_unitstable(context)\n    }\n\nexport default registerExtensions","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This file was automatically generated by jinjaroot. Do not edit directly. See the .jinjaroot dir.\nimport { createExtensionContext, LabboxProvider } from 'labbox';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport config from './config.json';\nimport './index.css';\nimport { LabboxPlugin } from './python/labbox_ephys/extensions/pluginInterface';\nimport registerExtensions from './registerExtensions';\nimport reportWebVitals from './reportWebVitals';\n\n// this is a hard-coded hack for now\nconst apiConfig = (window.location.hostname === 'labbox-ephys.flatironinstitute.org') ? ({\n  webSocketUrl: `ws://${window.location.hostname}/ws`,\n  baseSha1Url: `http://${window.location.hostname}/api/sha1`,\n  baseFeedUrl: `http://${window.location.hostname}/api/feed`\n}) : ({\n  webSocketUrl: `ws://${window.location.hostname}:${config.webSocketPort}`,\n  baseSha1Url: `http://${window.location.hostname}:${config.httpPort}/sha1`,\n  baseFeedUrl: `http://${window.location.hostname}:${config.httpPort}/feed`\n})\n\nconst extensionContext = createExtensionContext<LabboxPlugin>()\nregisterExtensions(extensionContext).then(() => {\n  ReactDOM.render(\n    // <React.StrictMode>\n      <LabboxProvider\n        extensionContext={extensionContext}\n        apiConfig={apiConfig}\n      >\n        <BrowserRouter><App version=\"0.7.2\" /></BrowserRouter>\n      </LabboxProvider>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );  \n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}