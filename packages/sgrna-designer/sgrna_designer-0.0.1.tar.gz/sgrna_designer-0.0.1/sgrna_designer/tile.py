# AUTOGENERATED! DO NOT EDIT! File to edit: 01_tile.ipynb (unless otherwise specified).

__all__ = ['get_sequence_kmers', 'extract_subsequences', 'build_sgrna_df']

# Cell
import pandas as pd

# Cell
def get_sequence_kmers(sequence, k):
    """Get all subsequences of length k. Include overlapping sequences

    sequence: str |
    k: int |

    returns: list of str
    """
    seq_len = len(sequence)
    subsequences = [sequence[i:(i+k)] for i in range(seq_len - k + 1)]
    return subsequences

# Cell
def extract_subsequences(sequences, subseq_len, subseq_start):
    """Given a list of sequences extract a subsequence from each one

    sequences: list |
    pam_len: int, length of pam being considered |
    pam_start: int, starting position for the pam sequence (-6 for Cas9) |

    returns: list
    """
    subsequences = [seq[subseq_start:(subseq_start+subseq_len)] for seq in sequences]
    return subsequences

# Cell
def build_sgrna_df(sequence, context_len, pam_start, pam_len,
                   sgrna_start, sgrna_len, pams=None):
    """Given a sequence, build a dataframe with all possible sgRNAs

    sequence: str, sequence to designs sgRNAs against |
    context_len: int, length of context sequence |
    pam_start: int, position of PAM start relative to the context sequence |
    pam_len: int, length of PAM |
    sgrna_start: int, position of sgRNA relative to context sequence |
    sgrna_len: length of sgRNA sequence |
    pams: list or None, PAMs to design against |

    returns: DataFrame
    """
    subsequences = get_sequence_kmers(sequence, context_len)
    sgrna_df = pd.DataFrame({'context_sequence': subsequences,
                             'context_relative_start': range(len(subsequences))})
    sgrna_df['pam_sequence'] = extract_subsequences(sgrna_df['context_sequence'], pam_len,
                                                    pam_start)
    if pams is not None:
        sgrna_df = (sgrna_df[sgrna_df.pam_sequence.isin(pams)]
                    .reset_index(drop=True))
    sgrna_df['sgrna_sequence'] = extract_subsequences(sgrna_df['context_sequence'], sgrna_len,
                                                      sgrna_start)
    sgrna_df['sgrna_relative_start'] = sgrna_df['context_relative_start'] + sgrna_start
    sgrna_df = sgrna_df.drop('context_relative_start', axis=1)
    return sgrna_df