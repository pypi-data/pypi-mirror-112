#!/usr/bin/env python3
# This file is placed in the Public Domain.

"24/7 channel daemon"

import os, sys

import atexit
import bot.all
import ob
import os
import sys
import termios

name = "botd"
ob.wd = "/var/lib/botd"

from ob import Restart, Handler, Kernel, launch

k = Kernel()
k.cfg.p = "bot"
k.cfg.m = "bot.irc"

resume = {}


def cprint(*args):
    print(*args)
    sys.stdout.flush()


def init(k):
    c = Console()
    launch(c.start)
    return


class CLI(Handler):
    def error(self, e):
        cprint(e.exc)
        raise Restart

    def handle(self, e):
        k.put(e)
        e.wait()

    def raw(self, txt):
        cprint(txt)


class Console(CLI):
    def error(self, e):
        cprint(e.exc)
        raise Restart

    def handle(self, e):
        k.put(e)
        e.wait()

    def poll(self):
        return input("> ")

    def raw(self, txt):
        cprint(txt)


def daemon():
    pid = os.fork()
    if pid != 0:
        termreset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", "r")
    so = open("/dev/null", "a+")
    se = open("/dev/null", "a+")
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())


def termsetup(fd):
    return termios.tcgetattr(fd)


def termreset():
    if "old" in resume:
        try:
            termios.tcsetattr(resume["fd"], termios.TCSADRAIN, resume["old"])
        except termios.error:
            pass


def termsave():
    try:
        resume["fd"] = sys.stdin.fileno()
        resume["old"] = termsetup(sys.stdin.fileno())
        atexit.register(termreset)
    except termios.error:
        pass


def wrap(func):
    termsave()
    try:
        func()
    except KeyboardInterrupt:
        pass
    finally:
        termreset()


def main():
    k.parse_cli()
    k.boot()
    if k.cfg.txt:
        k.start()
        cli = CLI()
        return k.cmd(cli, k.cfg.otxt)
    if k.opts("d"):
        daemon()
    k.privileges()
    k.start()
    k.wait()


wrap(main)
