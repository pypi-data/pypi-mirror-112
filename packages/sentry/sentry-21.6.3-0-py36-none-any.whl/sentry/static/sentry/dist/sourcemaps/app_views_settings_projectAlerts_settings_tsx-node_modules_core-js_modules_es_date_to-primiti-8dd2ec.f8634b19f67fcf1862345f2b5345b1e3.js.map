{"version":3,"sources":["webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/data/forms/projectAlerts.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectAlerts/settings.tsx","webpack:///../node_modules/core-js/internals/date-to-primitive.js","webpack:///../node_modules/core-js/modules/es.date.to-primitive.js","webpack:///../node_modules/core-js/modules/es.symbol.to-primitive.js"],"names":["InactivePlugins","plugins","onEnablePlugin","length","t","Plugins","map","plugin","IntegrationButton","onClick","className","id","Label","StyledPluginIcon","pluginId","shortName","name","space","p","theme","fontSizeSmall","borderRadius","PluginIcon","PluginList","organization","project","pluginList","onDisablePlugin","handleDisablePlugin","disablePlugin","projectId","slug","orgId","filter","enabled","data","isHidden","enablePlugin","route","formatMinutes","value","Number","tn","fields","subjectTemplate","type","label","placeholder","help","digestsMinDelay","min","max","step","defaultValue","formatLabel","digestsMaxDelay","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","FormPanel","props","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","sanitizeQuerySelector","undefined","field","fieldWithoutDefaultValue","disabledReason","highlighted","React","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","defined","visible","every","formPanelProps","shouldDisplayForm","forms","features","state","formGroup","i","renderForm","withRouter","PermissionAlert","hasAccess","icon","size","prevState","params","getProjectEndpoint","routeTitleGen","canEditRule","projectEndpoint","Fragment","action","to","pathname","query","saveOnBlur","allowUndo","initialData","apiMethod","apiEndpoint","hasConfiguration","handleEnablePlugin","anObject","toPrimitive","module","exports","hint","TypeError","createNonEnumerableProperty","dateToPrimitive","TO_PRIMITIVE","wellKnownSymbol","DatePrototype","Date","prototype","defineWellKnownSymbol"],"mappings":"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","file":"chunks/app_views_settings_projectAlerts_settings_tsx-node_modules_core-js_modules_es_date_to-primiti-8dd2ec.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport TextOverflow from 'app/components/textOverflow';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {Plugin} from 'app/types';\n\ntype Props = {\n  plugins: Plugin[];\n  onEnablePlugin: (plugin: Plugin) => void;\n};\n\nconst InactivePlugins = ({plugins, onEnablePlugin}: Props) => {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n};\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled('button')`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import {disablePlugin, enablePlugin} from 'app/actionCreators/plugins';\nimport InactivePlugins from 'app/components/inactivePlugins';\nimport PluginConfig from 'app/components/pluginConfig';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\n\nimport {Panel, PanelItem} from './panels';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  pluginList: Plugin[];\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nconst PluginList = ({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) => {\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n};\n\nexport default PluginList;\n","import {t, tn} from 'app/locale';\nimport {Field} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/alerts/';\n\nconst formatMinutes = (value: number | '') => {\n  value = Number(value) / 60;\n  return tn('%s minute', '%s minutes', value);\n};\n\nexport const fields: {[key: string]: Field} = {\n  subjectTemplate: {\n    name: 'subjectTemplate',\n    type: 'string',\n\n    // additional data/props that is related to rendering of form field rather than data\n    label: t('Subject Template'),\n    placeholder: 'e.g. $shortID - $title',\n    help: t(\n      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'\n    ),\n  },\n  digestsMinDelay: {\n    name: 'digestsMinDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Minimum delivery interval'),\n    help: t('Notifications will be delivered at most this often.'),\n    formatLabel: formatMinutes,\n  },\n  digestsMaxDelay: {\n    name: 'digestsMaxDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Maximum delivery interval'),\n    help: t('Notifications will be delivered at least this often.'),\n    formatLabel: formatMinutes,\n  },\n};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'app/components/alertLink';\nimport Button from 'app/components/button';\nimport {PanelAlert} from 'app/components/panels';\nimport PluginList from 'app/components/pluginList';\nimport {fields} from 'app/data/forms/projectAlerts';\nimport {IconMail} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype RouteParams = {orgId: string; projectId: string};\ntype Props = RouteComponentProps<RouteParams, {}> &\n  AsyncView['props'] & {\n    canEditRule: boolean;\n    organization: Organization;\n    project: Project;\n  };\n\ntype State = AsyncView['state'] & {\n  project: Project | null;\n  pluginList: Array<Plugin> | null;\n};\n\nclass Settings extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      project: null,\n      pluginList: [],\n    };\n  }\n  getProjectEndpoint({orgId, projectId}: RouteParams) {\n    return `/projects/${orgId}/${projectId}/`;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n    const projectEndpoint = this.getProjectEndpoint(params);\n    return [\n      ['project', projectEndpoint],\n      ['pluginList', `/projects/${orgId}/${projectId}/plugins/`],\n    ];\n  }\n\n  handleEnablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: true,\n        };\n      }),\n    }));\n  };\n\n  handleDisablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: false,\n        };\n      }),\n    }));\n  };\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Alerts Settings'), projectId, false);\n  }\n\n  renderBody() {\n    const {canEditRule, organization, params} = this.props;\n    const {orgId} = params;\n    const {project, pluginList} = this.state;\n\n    if (!project) {\n      return null;\n    }\n\n    const projectEndpoint = this.getProjectEndpoint(params);\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Alerts Settings')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${orgId}/alerts/rules/`,\n                query: {project: project.id},\n              }}\n              size=\"small\"\n            >\n              {t('View Alert Rules')}\n            </Button>\n          }\n        />\n        <PermissionAlert />\n        <AlertLink to=\"/settings/account/notifications/\" icon={<IconMail />}>\n          {t(\n            'Looking to fine-tune your personal notification preferences? Visit your Account Settings'\n          )}\n        </AlertLink>\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            subjectTemplate: project.subjectTemplate,\n            digestsMinDelay: project.digestsMinDelay,\n            digestsMaxDelay: project.digestsMaxDelay,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={projectEndpoint}\n        >\n          <JsonForm\n            disabled={!canEditRule}\n            title={t('Email Settings')}\n            fields={[fields.subjectTemplate]}\n          />\n\n          <JsonForm\n            title={t('Digests')}\n            disabled={!canEditRule}\n            fields={[fields.digestsMinDelay, fields.digestsMaxDelay]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                {t(\n                  'Sentry will automatically digest alerts sent by some services to avoid flooding your inbox with individual issue notifications. To control how frequently notifications are delivered, use the sliders below.'\n                )}\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        {canEditRule && (\n          <PluginList\n            organization={organization}\n            project={project}\n            pluginList={(pluginList ?? []).filter(\n              p => p.type === 'notification' && p.hasConfiguration\n            )}\n            onEnablePlugin={this.handleEnablePlugin}\n            onDisablePlugin={this.handleDisablePlugin}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// `Date.prototype[@@toPrimitive](hint)` method implementation\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {\n    throw TypeError('Incorrect hint');\n  } return toPrimitive(anObject(this), hint !== 'number');\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar dateToPrimitive = require('../internals/date-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar DatePrototype = Date.prototype;\n\n// `Date.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nif (!(TO_PRIMITIVE in DatePrototype)) {\n  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n"],"sourceRoot":""}