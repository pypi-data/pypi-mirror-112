{"version":3,"sources":["webpack:///./app/components/platformPicker.tsx"],"names":["PLATFORM_CATEGORIES","categoryList","id","name","t","PlatformList","space","PlatformPicker","keydown","category","props","defaultCategory","filter","noAutoFilter","platform","split","debounce","state","analytics","query","toLowerCase","num_results","platformList","length","React","this","currentCategory","filtered","platforms","includes","filterAliases","some","alias","sort","a","b","localeCompare","showOther","e","target","searchInput","current","focus","preventDefault","setPlatform","listProps","listClassName","NavContainer","CategoryNav","map","onClick","setState","to","isActive","SearchBar","size","type","ref","value","placeholder","onChange","logSearch","className","PlatformCard","selected","onClear","stopPropagation","icon","title","tct","search","href","p","theme","border","inputStyles","subText","NavTabs","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","defaultProps","isCircled","borderless","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","fontSizeExtraSmall"],"mappings":"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","file":"chunks/app_components_platformPicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport keydown from 'react-keydown';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport categoryList, {filterAliases, PlatformKey} from 'app/data/platformCategories';\nimport platforms from 'app/data/platforms';\nimport {IconClose, IconProject, IconSearch} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {PlatformIntegration} from 'app/types';\nimport {analytics} from 'app/utils/analytics';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\ntype Category = typeof PLATFORM_CATEGORIES[number]['id'];\n\ntype Props = {\n  setPlatform: (key: PlatformKey | null) => void;\n  platform?: string | null;\n  showOther?: boolean;\n  listClassName?: string;\n  listProps?: React.ComponentProps<typeof PlatformList>;\n  noAutoFilter?: boolean;\n  defaultCategory?: Category;\n};\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends React.Component<Props, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) =>\n      category === 'all' ||\n      (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      analytics('platformpicker.search', {\n        query: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n      });\n    }\n  }, 300);\n\n  @keydown('/')\n  focusSearch(e: KeyboardEvent) {\n    if (e.target !== this.searchInput.current) {\n      this.searchInput?.current?.focus();\n      e.preventDefault();\n    }\n  }\n\n  searchInput = React.createRef<HTMLInputElement>();\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <React.Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  analytics('platformpicker.select_tab', {category: id});\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              ref={this.searchInput}\n              value={filter}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                analytics('platformpicker.select_platform', {platform: platform.id});\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  grid-gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst SearchBar = styled('div')`\n  ${p => inputStyles(p)};\n  padding: 0 8px;\n  color: ${p => p.theme.subText};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  margin-top: -${space(0.75)};\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xsmall',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n"],"sourceRoot":""}