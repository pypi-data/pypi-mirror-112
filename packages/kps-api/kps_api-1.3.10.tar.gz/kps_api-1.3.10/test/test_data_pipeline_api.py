# coding: utf-8

"""
    Karbon Platform Services API reference.

    OpenAPI documentation for public facing Karbon Platform Services API  This API documentation is generated from source code using go-swagger. Do not edit the generated kps_api.json directly!  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: karbon-platform-services-api@nutanix.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import kps_api
from api.data_pipeline_api import DataPipelineApi  # noqa: E501
from kps_api.rest import ApiException


class TestDataPipelineApi(unittest.TestCase):
    """DataPipelineApi unit test stubs"""

    def setUp(self):
        self.api = api.data_pipeline_api.DataPipelineApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_data_pipeline_create(self):
        """Test case for data_pipeline_create

        Creates a data pipeline.  # noqa: E501
        """
        pass

    def test_data_pipeline_delete(self):
        """Test case for data_pipeline_delete

        Deletes data pipeline by its ID.  # noqa: E501
        """
        pass

    def test_data_pipeline_get(self):
        """Test case for data_pipeline_get

        Lists data pipeline by its ID.  # noqa: E501
        """
        pass

    def test_data_pipeline_list(self):
        """Test case for data_pipeline_list

        Gets data pipelines.  # noqa: E501
        """
        pass

    def test_data_pipeline_update(self):
        """Test case for data_pipeline_update

        Updates a data pipeline by its ID  # noqa: E501
        """
        pass

    def test_get_data_pipeline_containers(self):
        """Test case for get_data_pipeline_containers

        Get containers of a data pipeline specified by Datapipeline ID running on a specific edge.  # noqa: E501
        """
        pass

    def test_project_get_data_pipelines(self):
        """Test case for project_get_data_pipelines

        Gets data pipelines for a project.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
