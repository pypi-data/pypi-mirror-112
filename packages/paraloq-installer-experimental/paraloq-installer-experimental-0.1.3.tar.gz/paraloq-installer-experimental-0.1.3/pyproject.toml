[tool.poetry]
name = "paraloq-installer-experimental"
version = "0.1.3"
description = "Facilitates installing paraloq software."
authors = ["Maximilian Arrich"]
license = "MIT"
readme = "README.md"
include = ["HISTORY.md"]
# homepage = "hhtp://www.paraloq.at/"
classifiers =[
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Operating System :: OS Independent"
]
packages = [
    { include = "paraloq", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.7.1"
click = "^8.0.1"
typing-extensions = "^3.10.0"
pydantic = "^1.8.1"
boto3 = "^1.17.14"
requests = "^2.25.1"
rich = "^10.1.0"
fastapi = "^0.65.2"
uvicorn = "^0.14.0"
pywin32 = { version = "^300", markers = "platform_system == 'Windows'" }
cookiecutter = "^1.7.3"
pre-commit = "^2.13.0"
GitPython = "^3.1.18"

[tool.poetry.scripts]
pq = "paraloq.installer.cli:paraloq"

[bdist_wheel]
universal = 0

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=paraloq --cov-report term-missing"
testpaths = ["tests"]
collect_ignore = ['setup.py']
markers=[
    "cloud: mark a test as a cloud integration test.",
    "slow: mark test as slow.",
    "tfp: Test which require a valid tensorflow probability installation"
]

[tool.tox]
legacy_tox_ini = '''
[tox]
isolated_build = true
envlist = py38

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 alpha tests

[testenv]
whitelist_externals = poetry
commands =
  poetry install -v
  poetry run pytest
'''
