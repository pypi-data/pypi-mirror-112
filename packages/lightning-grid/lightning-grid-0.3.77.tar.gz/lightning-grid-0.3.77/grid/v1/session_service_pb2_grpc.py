# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grid.v1 import session_service_pb2 as grid_dot_v1_dot_session__service__pb2


class SessionServiceStub(object):
    """Missing associated documentation comment in .proto file."""
    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSession = channel.unary_unary(
            '/grid.v1.SessionService/CreateSession',
            request_serializer=grid_dot_v1_dot_session__service__pb2.CreateSessionRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.CreateSessionResponse.FromString,
        )
        self.GetSession = channel.unary_unary(
            '/grid.v1.SessionService/GetSession',
            request_serializer=grid_dot_v1_dot_session__service__pb2.GetSessionRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.GetSessionResponse.FromString,
        )
        self.ListSessions = channel.unary_unary(
            '/grid.v1.SessionService/ListSessions',
            request_serializer=grid_dot_v1_dot_session__service__pb2.ListSessionsRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.ListSessionsResponse.FromString,
        )
        self.UpdateSession = channel.unary_unary(
            '/grid.v1.SessionService/UpdateSession',
            request_serializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionResponse.FromString,
        )
        self.UpdateSessionStatus = channel.unary_unary(
            '/grid.v1.SessionService/UpdateSessionStatus',
            request_serializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusResponse.FromString,
        )
        self.DeleteSession = channel.unary_unary(
            '/grid.v1.SessionService/DeleteSession',
            request_serializer=grid_dot_v1_dot_session__service__pb2.DeleteSessionRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.DeleteSessionResponse.FromString,
        )
        self.WatchSessions = channel.unary_stream(
            '/grid.v1.SessionService/WatchSessions',
            request_serializer=grid_dot_v1_dot_session__service__pb2.WatchSessionsRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_session__service__pb2.WatchSessionsResponse.FromString,
        )


class SessionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""
    def CreateSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSessionStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SessionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateSession':
        grpc.unary_unary_rpc_method_handler(
            servicer.CreateSession,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.CreateSessionRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.CreateSessionResponse.SerializeToString,
        ),
        'GetSession':
        grpc.unary_unary_rpc_method_handler(
            servicer.GetSession,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.GetSessionRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.GetSessionResponse.SerializeToString,
        ),
        'ListSessions':
        grpc.unary_unary_rpc_method_handler(
            servicer.ListSessions,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.ListSessionsRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.ListSessionsResponse.SerializeToString,
        ),
        'UpdateSession':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSession,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionResponse.SerializeToString,
        ),
        'UpdateSessionStatus':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSessionStatus,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusResponse.SerializeToString,
        ),
        'DeleteSession':
        grpc.unary_unary_rpc_method_handler(
            servicer.DeleteSession,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.DeleteSessionRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.DeleteSessionResponse.SerializeToString,
        ),
        'WatchSessions':
        grpc.unary_stream_rpc_method_handler(
            servicer.WatchSessions,
            request_deserializer=grid_dot_v1_dot_session__service__pb2.WatchSessionsRequest.FromString,
            response_serializer=grid_dot_v1_dot_session__service__pb2.WatchSessionsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('grid.v1.SessionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class SessionService(object):
    """Missing associated documentation comment in .proto file."""
    @staticmethod
    def CreateSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/CreateSession',
            grid_dot_v1_dot_session__service__pb2.CreateSessionRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.CreateSessionResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def GetSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/GetSession',
            grid_dot_v1_dot_session__service__pb2.GetSessionRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.GetSessionResponse.FromString, options, channel_credentials, insecure,
            call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def ListSessions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/ListSessions',
            grid_dot_v1_dot_session__service__pb2.ListSessionsRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.ListSessionsResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/UpdateSession',
            grid_dot_v1_dot_session__service__pb2.UpdateSessionRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.UpdateSessionResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateSessionStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/UpdateSessionStatus',
            grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.UpdateSessionStatusResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def DeleteSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.SessionService/DeleteSession',
            grid_dot_v1_dot_session__service__pb2.DeleteSessionRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.DeleteSessionResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def WatchSessions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_stream(
            request, target, '/grid.v1.SessionService/WatchSessions',
            grid_dot_v1_dot_session__service__pb2.WatchSessionsRequest.SerializeToString,
            grid_dot_v1_dot_session__service__pb2.WatchSessionsResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )
