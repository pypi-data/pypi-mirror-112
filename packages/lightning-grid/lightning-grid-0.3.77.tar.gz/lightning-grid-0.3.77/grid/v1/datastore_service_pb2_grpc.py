# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grid.v1 import datastore_service_pb2 as grid_dot_v1_dot_datastore__service__pb2


class DatastoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""
    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDatastore = channel.unary_unary(
            '/grid.v1.DatastoreService/CreateDatastore',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreResponse.FromString,
        )
        self.GetDatastore = channel.unary_unary(
            '/grid.v1.DatastoreService/GetDatastore',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.GetDatastoreRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.GetDatastoreResponse.FromString,
        )
        self.ListDatastores = channel.unary_unary(
            '/grid.v1.DatastoreService/ListDatastores',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.ListDatastoresRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.ListDatastoresResponse.FromString,
        )
        self.UpdateDatastore = channel.unary_unary(
            '/grid.v1.DatastoreService/UpdateDatastore',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreResponse.FromString,
        )
        self.UpdateDatastoreStatus = channel.unary_unary(
            '/grid.v1.DatastoreService/UpdateDatastoreStatus',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusResponse.FromString,
        )
        self.DeleteDatastore = channel.unary_unary(
            '/grid.v1.DatastoreService/DeleteDatastore',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreResponse.FromString,
        )
        self.WatchDatastores = channel.unary_stream(
            '/grid.v1.DatastoreService/WatchDatastores',
            request_serializer=grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresResponse.FromString,
        )


class DatastoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""
    def CreateDatastore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDatastore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDatastores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatastore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatastoreStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDatastore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDatastores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatastoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateDatastore':
        grpc.unary_unary_rpc_method_handler(
            servicer.CreateDatastore,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreResponse.SerializeToString,
        ),
        'GetDatastore':
        grpc.unary_unary_rpc_method_handler(
            servicer.GetDatastore,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.GetDatastoreRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.GetDatastoreResponse.SerializeToString,
        ),
        'ListDatastores':
        grpc.unary_unary_rpc_method_handler(
            servicer.ListDatastores,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.ListDatastoresRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.ListDatastoresResponse.SerializeToString,
        ),
        'UpdateDatastore':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateDatastore,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreResponse.SerializeToString,
        ),
        'UpdateDatastoreStatus':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateDatastoreStatus,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusResponse.SerializeToString,
        ),
        'DeleteDatastore':
        grpc.unary_unary_rpc_method_handler(
            servicer.DeleteDatastore,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreResponse.SerializeToString,
        ),
        'WatchDatastores':
        grpc.unary_stream_rpc_method_handler(
            servicer.WatchDatastores,
            request_deserializer=grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresRequest.FromString,
            response_serializer=grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('grid.v1.DatastoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class DatastoreService(object):
    """Missing associated documentation comment in .proto file."""
    @staticmethod
    def CreateDatastore(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/CreateDatastore',
            grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.CreateDatastoreResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def GetDatastore(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/GetDatastore',
            grid_dot_v1_dot_datastore__service__pb2.GetDatastoreRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.GetDatastoreResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def ListDatastores(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/ListDatastores',
            grid_dot_v1_dot_datastore__service__pb2.ListDatastoresRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.ListDatastoresResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateDatastore(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/UpdateDatastore',
            grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateDatastoreStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/UpdateDatastoreStatus',
            grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.UpdateDatastoreStatusResponse.FromString, options,
            channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def DeleteDatastore(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.DatastoreService/DeleteDatastore',
            grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.DeleteDatastoreResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def WatchDatastores(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_stream(
            request, target, '/grid.v1.DatastoreService/WatchDatastores',
            grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresRequest.SerializeToString,
            grid_dot_v1_dot_datastore__service__pb2.WatchDatastoresResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )
