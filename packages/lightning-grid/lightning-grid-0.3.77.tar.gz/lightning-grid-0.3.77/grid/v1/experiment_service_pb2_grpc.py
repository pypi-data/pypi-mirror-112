# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grid.v1 import experiment_service_pb2 as grid_dot_v1_dot_experiment__service__pb2


class ExperimentServiceStub(object):
    """Missing associated documentation comment in .proto file."""
    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateExperiment = channel.unary_unary(
            '/grid.v1.ExperimentService/CreateExperiment',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.CreateExperimentRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.CreateExperimentResponse.FromString,
        )
        self.GetExperiment = channel.unary_unary(
            '/grid.v1.ExperimentService/GetExperiment',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.GetExperimentRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.GetExperimentResponse.FromString,
        )
        self.ListExperiments = channel.unary_unary(
            '/grid.v1.ExperimentService/ListExperiments',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.ListExperimentsRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.ListExperimentsResponse.FromString,
        )
        self.UpdateExperiment = channel.unary_unary(
            '/grid.v1.ExperimentService/UpdateExperiment',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentResponse.FromString,
        )
        self.UpdateExperimentStatus = channel.unary_unary(
            '/grid.v1.ExperimentService/UpdateExperimentStatus',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusResponse.FromString,
        )
        self.DeleteExperiment = channel.unary_unary(
            '/grid.v1.ExperimentService/DeleteExperiment',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentResponse.FromString,
        )
        self.WatchExperiments = channel.unary_stream(
            '/grid.v1.ExperimentService/WatchExperiments',
            request_serializer=grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsResponse.FromString,
        )


class ExperimentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""
    def CreateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExperimentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateExperiment':
        grpc.unary_unary_rpc_method_handler(
            servicer.CreateExperiment,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.CreateExperimentRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.CreateExperimentResponse.SerializeToString,
        ),
        'GetExperiment':
        grpc.unary_unary_rpc_method_handler(
            servicer.GetExperiment,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.GetExperimentRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.GetExperimentResponse.SerializeToString,
        ),
        'ListExperiments':
        grpc.unary_unary_rpc_method_handler(
            servicer.ListExperiments,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.ListExperimentsRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.ListExperimentsResponse.SerializeToString,
        ),
        'UpdateExperiment':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateExperiment,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentResponse.SerializeToString,
        ),
        'UpdateExperimentStatus':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateExperimentStatus,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusResponse.
            SerializeToString,
        ),
        'DeleteExperiment':
        grpc.unary_unary_rpc_method_handler(
            servicer.DeleteExperiment,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentResponse.SerializeToString,
        ),
        'WatchExperiments':
        grpc.unary_stream_rpc_method_handler(
            servicer.WatchExperiments,
            request_deserializer=grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsRequest.FromString,
            response_serializer=grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('grid.v1.ExperimentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class ExperimentService(object):
    """Missing associated documentation comment in .proto file."""
    @staticmethod
    def CreateExperiment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/CreateExperiment',
            grid_dot_v1_dot_experiment__service__pb2.CreateExperimentRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.CreateExperimentResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def GetExperiment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/GetExperiment',
            grid_dot_v1_dot_experiment__service__pb2.GetExperimentRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.GetExperimentResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def ListExperiments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/ListExperiments',
            grid_dot_v1_dot_experiment__service__pb2.ListExperimentsRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.ListExperimentsResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateExperiment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/UpdateExperiment',
            grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateExperimentStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/UpdateExperimentStatus',
            grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.UpdateExperimentStatusResponse.FromString, options,
            channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def DeleteExperiment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ExperimentService/DeleteExperiment',
            grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.DeleteExperimentResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def WatchExperiments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_stream(
            request, target, '/grid.v1.ExperimentService/WatchExperiments',
            grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsRequest.SerializeToString,
            grid_dot_v1_dot_experiment__service__pb2.WatchExperimentsResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )
