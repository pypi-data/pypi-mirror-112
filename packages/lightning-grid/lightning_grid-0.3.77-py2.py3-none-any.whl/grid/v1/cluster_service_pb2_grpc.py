# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grid.v1 import cluster_service_pb2 as grid_dot_v1_dot_cluster__service__pb2


class ClusterServiceStub(object):
    """Missing associated documentation comment in .proto file."""
    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCluster = channel.unary_unary(
            '/grid.v1.ClusterService/CreateCluster',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.CreateClusterRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.CreateClusterResponse.FromString,
        )
        self.GetCluster = channel.unary_unary(
            '/grid.v1.ClusterService/GetCluster',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.GetClusterRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.GetClusterResponse.FromString,
        )
        self.ListClusters = channel.unary_unary(
            '/grid.v1.ClusterService/ListClusters',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.ListClustersRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.ListClustersResponse.FromString,
        )
        self.UpdateCluster = channel.unary_unary(
            '/grid.v1.ClusterService/UpdateCluster',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterResponse.FromString,
        )
        self.UpdateClusterStatus = channel.unary_unary(
            '/grid.v1.ClusterService/UpdateClusterStatus',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusResponse.FromString,
        )
        self.DeleteCluster = channel.unary_unary(
            '/grid.v1.ClusterService/DeleteCluster',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.DeleteClusterRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.DeleteClusterResponse.FromString,
        )
        self.WatchClusters = channel.unary_stream(
            '/grid.v1.ClusterService/WatchClusters',
            request_serializer=grid_dot_v1_dot_cluster__service__pb2.WatchClustersRequest.SerializeToString,
            response_deserializer=grid_dot_v1_dot_cluster__service__pb2.WatchClustersResponse.FromString,
        )


class ClusterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""
    def CreateCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClusters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClusterStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchClusters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateCluster':
        grpc.unary_unary_rpc_method_handler(
            servicer.CreateCluster,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.CreateClusterRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.CreateClusterResponse.SerializeToString,
        ),
        'GetCluster':
        grpc.unary_unary_rpc_method_handler(
            servicer.GetCluster,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.GetClusterRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.GetClusterResponse.SerializeToString,
        ),
        'ListClusters':
        grpc.unary_unary_rpc_method_handler(
            servicer.ListClusters,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.ListClustersRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.ListClustersResponse.SerializeToString,
        ),
        'UpdateCluster':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateCluster,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterResponse.SerializeToString,
        ),
        'UpdateClusterStatus':
        grpc.unary_unary_rpc_method_handler(
            servicer.UpdateClusterStatus,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusResponse.SerializeToString,
        ),
        'DeleteCluster':
        grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCluster,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.DeleteClusterRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.DeleteClusterResponse.SerializeToString,
        ),
        'WatchClusters':
        grpc.unary_stream_rpc_method_handler(
            servicer.WatchClusters,
            request_deserializer=grid_dot_v1_dot_cluster__service__pb2.WatchClustersRequest.FromString,
            response_serializer=grid_dot_v1_dot_cluster__service__pb2.WatchClustersResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('grid.v1.ClusterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class ClusterService(object):
    """Missing associated documentation comment in .proto file."""
    @staticmethod
    def CreateCluster(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/CreateCluster',
            grid_dot_v1_dot_cluster__service__pb2.CreateClusterRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.CreateClusterResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def GetCluster(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/GetCluster',
            grid_dot_v1_dot_cluster__service__pb2.GetClusterRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.GetClusterResponse.FromString, options, channel_credentials, insecure,
            call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def ListClusters(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/ListClusters',
            grid_dot_v1_dot_cluster__service__pb2.ListClustersRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.ListClustersResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateCluster(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/UpdateCluster',
            grid_dot_v1_dot_cluster__service__pb2.UpdateClusterRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.UpdateClusterResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def UpdateClusterStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/UpdateClusterStatus',
            grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.UpdateClusterStatusResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def DeleteCluster(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_unary(
            request, target, '/grid.v1.ClusterService/DeleteCluster',
            grid_dot_v1_dot_cluster__service__pb2.DeleteClusterRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.DeleteClusterResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )

    @staticmethod
    def WatchClusters(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None
    ):
        return grpc.experimental.unary_stream(
            request, target, '/grid.v1.ClusterService/WatchClusters',
            grid_dot_v1_dot_cluster__service__pb2.WatchClustersRequest.SerializeToString,
            grid_dot_v1_dot_cluster__service__pb2.WatchClustersResponse.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata
        )
